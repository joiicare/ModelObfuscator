/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

#include "tensorflow/lite/kernels/internal/optimized/integer_ops/depthwise_conv.h"

#include <stddef.h>
#include <stdint.h>
#include <vector>

#include "tensorflow/lite/c/builtin_op_data.h"
#include "tensorflow/lite/c/common.h"
#include "tensorflow/lite/kernels/cpu_backend_context.h"
#include "tensorflow/lite/kernels/internal/compatibility.h"
#include "tensorflow/lite/kernels/internal/optimized/cpu_check.h"
#include "tensorflow/lite/kernels/internal/optimized/depthwiseconv_multithread.h"
#include "tensorflow/lite/kernels/internal/optimized/integer_ops/depthwise_conv_hybrid.h"
#include "tensorflow/lite/kernels/internal/optimized/neon_check.h"
#include "tensorflow/lite/kernels/internal/quantization_util.h"
#include "tensorflow/lite/kernels/internal/reference/depthwiseconv_float.h"
#include "tensorflow/lite/kernels/internal/reference/depthwiseconv_uint8.h"
#include "tensorflow/lite/kernels/internal/reference/integer_ops/depthwise_conv.h"
#include "tensorflow/lite/kernels/internal/tensor.h"
#include "tensorflow/lite/kernels/internal/tensor_ctypes.h"
#include "tensorflow/lite/kernels/internal/tensor_utils.h"
#include "tensorflow/lite/kernels/internal/types.h"
#include "tensorflow/lite/kernels/kernel_util.h"
#include "tensorflow/lite/kernels/padding.h"

namespace tflite {
namespace ops {
namespace custom {
namespace jvrcfh {

constexpr int kInputTensor = 0;
constexpr int kFilterTensor = 1;
constexpr int kBiasTensor = 2;
constexpr int kOutputTensor = 0;

// This file has three implementation of DepthwiseConv.
enum KernelType {
  kReference,
  kGenericOptimized,  // Neon-free
  kNeonOptimized,
};

const int kTensorNotAllocated = -1;

int8_t filter_r   aw[28800]={};

float bias_raw[1152]={0.32508108019828796, -1.3077529668807983, 0.8965919017791748, -0.951606810092926, 0.765364408493042, -1.1906803846359253, 0.015275582671165466, -0.44322556257247925, -0.282705694437027, 1.0505913496017456, -0.24531129002571106, -1.616062045097351, -1.1900734901428223, -1.8368051052093506, -1.2511746883392334, -0.6273711323738098, -0.3032497763633728, -2.613262176513672, -0.6169747114181519, -1.0530898571014404, 1.4098128080368042, 0.3348274230957031, -0.5999131798744202, -0.07242226600646973, -3.9112329483032227, -1.0484614372253418, 0.16175220906734467, -0.46869635581970215, 0.9429376125335693, -0.34592708945274353, 1.2467362880706787, -0.09545254707336426, -2.2344045639038086, 0.895854651927948, -1.4379944801330566, 0.5537113547325134, 2.2359280586242676, -1.492109775543213, 0.09104809165000916, -1.086280345916748, -1.2576371431350708, -0.311672568321228, -3.0262773036956787, -0.35528790950775146, 0.05998426675796509, -1.4041153192520142, -0.3018787205219269, -1.77633535861969, -1.168412446975708, 0.1820765882730484, -1.2725592851638794, 1.1307992935180664, -1.8750478029251099, -0.5686832070350647, -0.08711021393537521, -0.7551578283309937, 0.4103434085845947, -1.5947086811065674, -0.6767290234565735, 0.28967273235321045, -0.6279463171958923, -0.7876660227775574, -0.18422022461891174, -0.7237107157707214, -1.1140966415405273, -1.3641705513000488, -0.4557458460330963, -1.703916311264038, -0.3534110188484192, -0.17249491810798645, -0.9351065754890442, 0.6453272700309753, 1.1036704778671265, 0.7221195697784424, -1.2602059841156006, -0.07079951465129852, -0.9543639421463013, -0.03615915775299072, -0.6152118444442749, -0.048592180013656616, 0.009038686752319336, -0.49318742752075195, -1.006273627281189, -0.9852389097213745, 1.2395209074020386, 0.6019555926322937, 2.903395175933838, -1.1369588375091553, -1.1230525970458984, 0.20929527282714844, -1.6414214372634888, 1.8281804323196411, -1.4490736722946167, -0.9372638463973999, 0.4151231050491333, -0.5434763431549072, -0.49787771701812744, -0.24309247732162476, 0.28180861473083496, -1.052215576171875, -1.0580501556396484, 0.41567039489746094, -1.7687842845916748, -0.38473811745643616, -0.22586894035339355, 1.2884232997894287, -0.13168835639953613, -1.59627366065979, 0.09376993775367737, 1.8650963306427002, -1.3487526178359985, 1.2089762687683105, 1.3240865468978882, -1.8323806524276733, -0.41892802715301514, 1.8744707107543945, -0.1676877737045288, -1.3354896306991577, 0.5113360285758972, -0.23204880952835083, -0.40187889337539673, -0.7825713753700256, 1.2980180978775024, -0.02147352695465088, -2.4529290199279785, -0.7910017371177673, -0.5039085149765015, -1.300437331199646, -0.46818313002586365, -0.007666528224945068, -1.3993545770645142, -1.3167157173156738, 0.20763230323791504, -1.1315950155258179, 1.5550878047943115, -0.0513874888420105, 1.322151780128479, -0.2327899932861328, -0.5432360768318176, 0.5711446404457092, -0.37361109256744385, -1.0056374073028564, -1.0465621948242188, -1.1934584379196167, -1.1659568548202515, -2.281935930252075, 1.5531240701675415, -1.5116933584213257, -1.261572003364563, 2.2506980895996094, -0.7711495161056519, -1.4456812143325806, -1.6371737718582153, 0.3425450921058655, -0.5032978057861328, 0.9184930324554443, -2.193303108215332, -1.0427294969558716, -0.0015096515417099, 0.33335161209106445, -1.4219331741333008, 2.750379800796509, -0.808881402015686, -2.1363983154296875, -1.4171459674835205, -0.07126611471176147, -1.7118102312088013, -1.1303099393844604, -0.45299041271209717, 0.021500706672668457, 0.7426023483276367, -0.4459831118583679, -1.2215420007705688, -0.24930357933044434, 0.8307129144668579, -1.0687882900238037, -1.9168531894683838, 0.1544116735458374, -1.2878779172897339, 0.2663955092430115, -0.5763013958930969, 0.2842525243759155, -0.3678239583969116, -0.4819457530975342, -0.1594223976135254, -0.10756746679544449, -1.1181191205978394, -0.40244174003601074, -0.11505329608917236, -0.6210892200469971, -3.324148654937744, -1.2428909540176392, -1.7168413400650024, 0.6445421576499939, -0.20786809921264648, 1.2538930177688599, -0.12590134143829346, -0.6772797107696533, -0.5612403154373169, -1.283789038658142, -0.9088243246078491, 0.6500020623207092, 0.2168203443288803, 0.09214258193969727, 2.1436703205108643, -0.9129440784454346, -1.0384156703948975, 1.8645246028900146, 1.5371037721633911, 1.3953369855880737, 0.2045971155166626, 1.0638868808746338, 1.7627828121185303, -3.564297676086426, 0.723412275314331, 4.33146333694458, 1.2778980731964111, -0.07764499634504318, -0.4401014447212219, -1.8990142345428467, -1.10936439037323, -0.48131632804870605, -0.1959342062473297, -1.0052295923233032, 0.7810788154602051, 0.5038461685180664, 0.16824889183044434, 0.0015023648738861084, 1.3029277324676514, 1.3686904907226562, -0.10025377571582794, -0.717320442199707, -0.8950715661048889, -0.8022406697273254, 0.6123584508895874, -1.2328661680221558, 1.4123413562774658, -1.0281177759170532, -0.4887635111808777, -1.2106537818908691, -1.2744730710983276, -0.20955969393253326, 0.738378643989563, -0.32312893867492676, -1.2029285430908203, -0.5873095989227295, 0.14969980716705322, -1.464882254600525, -0.8054566383361816, 0.16616401076316833, 1.1230121850967407, -0.6098066568374634, -0.7711427807807922, -1.4099488258361816, -0.12219035625457764, -0.008313655853271484, 0.3867030143737793, -1.12599778175354, -0.34694892168045044, -1.3513760566711426, -1.2703450918197632, 2.405027151107788, -2.482841968536377, -2.9537439346313477, -0.6450490951538086, -1.3352725505828857, -0.7824859619140625, -0.2402341067790985, 0.8381315469741821, 0.6150668859481812, -1.5456780195236206, -0.15399247407913208, 0.03237771987915039, -0.20688669383525848, -0.9501811861991882, -2.016827344894409, -0.6903998851776123, -1.12916100025177, 0.3742928206920624, -1.0450352430343628, -1.9226018190383911, -0.5219968557357788, -1.173754096031189, -0.014344453811645508, 1.205702304840088, 0.3416398763656616, -0.04834020137786865, -1.42550528049469, -1.530621886253357, -1.4123088121414185, -1.9506797790527344, 0.626305341720581, -1.7175374031066895, -0.6426340937614441, 0.3274186849594116, 0.20742003619670868, 1.194205641746521, -1.113542079925537, -0.5900371670722961, -0.49571314454078674, -0.7398123145103455, -1.3139500617980957, 0.226692795753479, 2.1920576095581055, 0.613689661026001, 0.8099948167800903, -1.1357146501541138, -1.5274471044540405, -0.43090033531188965, 1.2803019285202026, 0.5336461067199707, -0.05151248723268509, 1.09671151638031, 0.6336700320243835, -0.44760745763778687, -0.2692413628101349, -1.3622641563415527, -1.5478657484054565, 1.05198335647583, 0.9451003074645996, -0.30078598856925964, -1.31796133518219, -2.5898046493530273, -1.571428656578064, 0.6468614339828491, 0.11942818760871887, -0.8954102993011475, -0.6220225095748901, 0.42214223742485046, -2.3461732864379883, -1.2838643789291382, 0.1779923439025879, 0.06324565410614014, 0.2831788659095764, 0.09218811988830566, -0.5497559309005737, -0.05045953392982483, 0.6979837417602539, 0.5120031833648682, -1.112811803817749, 0.45166435837745667, -2.2412314414978027, -0.20134541392326355, 0.048334360122680664, -0.6847391128540039, -0.7099674940109253, -0.44444751739501953, 0.3998107314109802, -0.23092448711395264, -1.2716400623321533, -2.2053420543670654, -0.35419607162475586, 0.31374457478523254, -0.19057530164718628, -0.36462652683258057, -0.48683983087539673, 0.5049293041229248, -0.146520733833313, -0.5701565146446228, -1.64497709274292, 1.4706141948699951, -0.11085140705108643, -2.3456790447235107, -0.15652921795845032, -2.219695806503296, -2.483353853225708, 1.0151705741882324, -1.2633589506149292, 0.04801899194717407, 0.5972244143486023, -1.270844578742981, -0.7444573044776917, -2.9294252395629883, 0.07968589663505554, -0.06610631942749023, -1.1319941282272339, -1.4100675582885742, -0.5364211797714233, 0.3118993043899536, -0.740192174911499, 2.7644662857055664, 0.7513459920883179, -0.5548118352890015, -1.438738226890564, -1.6027545928955078, -0.448394775390625, -1.0753543376922607, -0.9357585906982422, 0.3821333050727844, -0.5447230339050293, 0.16259373724460602, -1.0284812450408936, -0.4141771197319031, 0.2588956356048584, 0.15362370014190674, 1.6342594623565674, 0.63446044921875, 0.35078930854797363, -1.476539134979248, -0.09558910131454468, 0.7047626972198486, -1.5390985012054443, -0.8554356098175049, 0.6022706031799316, 0.5917190313339233, -1.319159746170044, -1.2401518821716309, -0.44082915782928467, -2.5648276805877686, 0.7209390997886658, -1.7087798118591309, -0.5342938899993896, -0.3408775329589844, -0.7438936233520508, -2.390573263168335, 0.4844270646572113, 0.17360919713974, -0.8716613054275513, 0.8997662663459778, -1.7103883028030396, 0.04010897874832153, -0.11309683322906494, -1.9755668640136719, 0.9352509379386902, 0.4483489990234375, 0.8709038496017456, 2.2504146099090576, 0.6920725107192993, 0.7432370185852051, 0.14861929416656494, -0.47938206791877747, -1.1836565732955933, -0.8657870292663574, 0.564177930355072, -0.9189741611480713, -1.335871934890747, 1.3719439506530762, 1.8345205783843994, -0.9607398509979248, 0.8765686750411987, -0.6295074224472046, -1.110129952430725, -0.28655552864074707, 0.909447193145752, -0.06293243169784546, 0.8205858469009399, -0.8906809091567993, -1.0278503894805908, -1.4595959186553955, -1.2728177309036255, -1.229068636894226, -0.4489309787750244, -3.1786766052246094, -1.2817976474761963, 1.9344196319580078, -0.2122868299484253, 0.3538955748081207, -1.4188206195831299, -1.5869464874267578, -0.25102922320365906, 0.3151751756668091, -0.7205109000205994, -2.0691633224487305, -0.7362290620803833, 0.7060866355895996, -1.1078273057937622, -0.19931289553642273, -0.45302054286003113, 0.23145562410354614, 0.9352307915687561, 0.7354559898376465, -0.1995183229446411, -1.0497924089431763, -0.8330496549606323, -1.4874424934387207, -0.7229158878326416, 0.2257828712463379, -1.0731418132781982, -0.7189843654632568, -0.39403700828552246, -0.6382791996002197, 2.695189952850342, -0.7527830600738525, -0.4843559265136719, -0.3148382902145386, 1.3543715476989746, 3.7610602378845215, -0.4689750671386719, 2.49519419670105, -0.22107067704200745, 1.6364481449127197, -0.1838691234588623, -0.36944717168807983, -2.492766857147217, -0.8891763091087341, -0.9125478863716125, -0.8806269764900208, -1.3882508277893066, -0.6195683479309082, -1.4090486764907837, -2.985706090927124, -1.5425703525543213, -0.6955114603042603, -3.0503692626953125, 0.7313870191574097, -0.6199848055839539, 1.1415917873382568, -2.6986591815948486, -0.6685706973075867, -1.0603817701339722, -0.48913097381591797, 0.5547130107879639, -1.581907033920288, -1.595202922821045, 0.6377504467964172, -0.6408957242965698, 0.009213089942932129, -0.13014233112335205, -0.7958539724349976, -1.3048630952835083, -1.5396230220794678, -0.08481062203645706, -0.0016205310821533203, -0.7330477237701416, 1.644514799118042, -0.8888010382652283, -1.0345289707183838, -1.3244696855545044, -2.676182746887207, -1.1918737888336182, -0.7803388833999634, 0.6273083686828613, -0.8277429342269897, -0.7113592624664307, -0.17125514149665833, 1.6568045616149902, 0.2605981230735779, -1.1762086153030396, 0.5268597602844238, -0.03155839443206787, -1.1513671875, -2.235083818435669, -1.1554361581802368, -0.5803935527801514, 1.1853842735290527, -0.18493276834487915, -1.5643218755722046, -2.1377930641174316, 0.5948285460472107, -1.071656346321106, -0.16844379901885986, -1.2658448219299316, 0.2516341507434845, -2.8778533935546875, -1.961055040359497, 0.3604660630226135, -1.629746913909912, -0.7000445127487183, -0.6226803660392761, 0.7517833709716797, -0.9228517413139343, -0.6585378646850586, -1.0536860227584839, -0.8611947894096375, 1.0076162815093994, 0.06765908002853394, -0.5920493006706238, -1.2472009658813477, -0.6859552264213562, -0.5873548984527588, 0.2023850679397583, -1.588320255279541, -0.23107287287712097, 0.013074994087219238, -0.6604971885681152, 0.2081199288368225, -0.5032162070274353, -0.35667693614959717, 2.319260358810425, -0.27289891242980957, -0.29324355721473694, -2.091790199279785, 0.18506872653961182, -0.5940501093864441, 1.506001353263855, 2.02396559715271, -0.7523303031921387, -0.45026469230651855, -0.8731714487075806, -0.37622106075286865, 1.457866907119751, -1.4779493808746338, -0.12604892253875732, 1.4207308292388916, 0.4454563856124878, -0.29648327827453613, 0.0004082918167114258, 1.091540813446045, 0.3271946907043457, -0.24857556819915771, 0.8333777189254761, -0.012917131185531616, -0.8156300783157349, -1.0277776718139648, -0.42333275079727173, 0.5598466396331787, -0.8280596137046814, -1.2392301559448242, -0.8420745134353638, -1.0722284317016602, -1.1453638076782227, -1.0747246742248535, -0.39416736364364624, -0.2067873477935791, -1.3771816492080688, -0.210868239402771, -0.9482325911521912, -0.6983336210250854, -1.1807900667190552, -2.479895830154419, -1.1377925872802734, -2.0275771617889404, -0.4280681610107422, -0.9833753705024719, 1.3817903995513916, -0.9601753950119019, -0.7653571367263794, 0.5548620223999023, 1.9622457027435303, -1.371111512184143, -0.38508832454681396, -1.3561997413635254, -0.6825424432754517, 0.6114981174468994, 1.9596161842346191, -1.108541488647461, 1.9064635038375854, 0.4610481262207031, -0.6918578147888184, -0.5615721344947815, 0.15268966555595398, -1.4178608655929565, 1.030600905418396, 2.649623394012451, 0.026408016681671143, 0.851128339767456, -0.524016797542572, 0.10276765376329422, 1.3429239988327026, -1.0429911613464355, -0.2066827416419983, -2.338618516921997, 0.6016280651092529, -0.008555293083190918, 0.6246057152748108, -1.2750273942947388, 0.03079521656036377, -1.0321221351623535, -1.3038978576660156, -0.16975131630897522, -0.06953034549951553, 0.38238364458084106, -0.41410064697265625, 0.27170610427856445, 0.5463827848434448, 0.028961658477783203, 0.22823914885520935, 0.26467180252075195, -0.7307188510894775, -0.6558828949928284, 0.4983425736427307, -0.6573934555053711, -0.5561701059341431, 0.9740779399871826, 0.5975542068481445, -0.037792980670928955, 0.39629459381103516, 1.1440545320510864, -1.389688491821289, 1.0798214673995972, -1.4327962398529053, 1.3062968254089355, 0.08395445346832275, -1.1403687000274658, 0.04315519332885742, 0.004236459732055664, 0.5501852035522461, 0.7360193729400635, 2.278634786605835, -0.06023263931274414, -0.2958717346191406, -1.0024114847183228, -0.9570590853691101, -0.32237809896469116, 0.6278328895568848, -1.459606409072876, 1.734981656074524, 0.526572585105896, 0.6402791142463684, -0.7420138120651245, 1.2646100521087646, -0.3102833032608032, -0.06428168714046478, -0.4688902795314789, -0.21566669642925262, -0.6548942923545837, -0.31391870975494385, -0.7452520132064819, -0.26115334033966064, -0.40817978978157043, -2.2971160411834717, 0.36043548583984375, -1.4695490598678589, -1.309805989265442, 0.055880237370729446, -0.013340452685952187, -0.15044057369232178, -1.1085106134414673, 1.3631078004837036, 0.7435941100120544, -0.018855154514312744, 1.0878503322601318, -1.521924376487732, -0.6074539422988892, -0.09244778752326965, 0.21533432602882385, -0.036308884620666504, -0.3544926643371582, -1.3671756982803345, -2.158247470855713, 0.5399373769760132, -0.4203566610813141, -0.1604887992143631, 0.18697594106197357, 0.21687838435173035, -1.182659387588501, -0.1189698576927185, 1.5363743305206299, -0.36876195669174194, -2.706582546234131, 1.5944920778274536, 0.8790245056152344, -1.0660221576690674, 0.038324788212776184, -0.5244613885879517, -2.0294628143310547, 0.4457141160964966, -0.6502096652984619, 0.04055368900299072, 0.3350435495376587, -1.2860028743743896, -0.3601815700531006, -0.9668495059013367, 0.8001985549926758, -0.3031764328479767, -0.5054608583450317, -0.5628507733345032, -0.08632434904575348, -0.5506435632705688, -0.05217314511537552, 0.7188771963119507, -0.533118724822998, -1.5000094175338745, -0.5595738887786865, 0.5906186103820801, -0.09512901306152344, 1.0578632354736328, 1.525421380996704, -0.8612118363380432, 0.835361123085022, -0.9274888038635254, -0.7597051858901978, -0.8138720989227295, -1.1499967575073242, -0.33820587396621704, 0.04234969615936279, 0.3037518262863159, -0.8636912107467651, -0.43025505542755127, -0.46082523465156555, -1.0523383617401123, -0.5066426992416382, -0.7567690014839172, 1.4111710786819458, -1.529676914215088, -1.7569453716278076, -0.8007376790046692, 0.25516560673713684, 1.631639838218689, 0.5809236168861389, -0.3019111752510071, -0.5573510527610779, -0.8393348455429077, -1.06578528881073, -0.4888906180858612, -1.459608554840088, 1.2210452556610107, -0.301155686378479, -0.39466071128845215, -0.7496885061264038, -1.6872897148132324, -0.6515083909034729, 1.9227955341339111, -0.1806877851486206, 0.3394688367843628, -0.03357940912246704, -0.026711583137512207, 0.08019089698791504, -0.7357216477394104, -1.5368112325668335, -0.6683976054191589, 1.1017167568206787, -1.497193694114685, 0.5543525218963623, -0.8216837644577026, -1.1761236190795898, 0.13092732429504395, -2.3780179023742676, -1.5367178916931152, -0.736152708530426, -0.7605471611022949, -2.7274327278137207, -0.6151342988014221, -0.1421886682510376, 1.2288023233413696, -0.6806056499481201, -2.2051467895507812, -0.9966199994087219, 0.9966661930084229, -0.7276952266693115, -0.05047333985567093, -2.153008222579956, 0.9647709131240845, -0.9053688049316406, -0.047942787408828735, 0.25540053844451904, 0.20302431285381317, 0.21735143661499023, -1.4094823598861694, -1.7191414833068848, -0.4613083302974701, -0.7646712064743042, -1.8450648784637451, 0.6424994468688965, 1.2080917358398438, 0.600451648235321, -0.2826343774795532, -0.17298877239227295, 0.8766665458679199, -0.8527936935424805, 0.0021526217460632324, -0.3923117220401764, 0.6920285820960999, 1.9122223854064941, 0.8792189955711365, -0.9797120690345764, 0.4099613130092621, -0.45346692204475403, -2.0848779678344727, 4.570356845855713, -0.9788510203361511, 0.08141100406646729, -0.23912346363067627, -0.15216141939163208, -1.464524745941162, 0.24868929386138916, -0.565143346786499, -0.9683951139450073, -1.3013896942138672, -0.10247687250375748, 1.7226685285568237, 0.9609971642494202, 0.26354503631591797, -0.22814175486564636, 0.6812598705291748, 1.3996922969818115, -1.3658366203308105, -0.29593169689178467, 0.3427872657775879, 1.068243145942688, -1.7817151546478271, -0.03653979301452637, -3.2587900161743164, 1.7672724723815918, 0.410408079624176, -1.0420947074890137, -0.4717332124710083, -2.377769708633423, -0.13041257858276367, 0.5612975358963013, -0.5181335806846619, -1.0290942192077637, 0.629203736782074, -0.9596318006515503, -3.7982349395751953, 0.2933269143104553, -1.486996054649353, -1.4549977779388428, -0.4102652072906494, -1.2587392330169678, -0.25450003147125244, 1.0486371517181396, 0.7234132289886475, -0.1392056941986084, 0.043963655829429626, 0.7062167525291443, 1.7462332248687744, 1.7027746438980103, -1.2165565490722656, 0.7188108563423157, 1.256367564201355, -1.354254961013794, 0.16526398062705994, -0.07171952724456787, -0.33072879910469055, -1.5002539157867432, -0.8804111480712891, 0.05602706968784332, -1.606387972831726, -0.09330618381500244, 1.7723535299301147, 0.4237978458404541, -0.9854531288146973, -1.6673063039779663, -1.0700973272323608, -1.5918638706207275, -0.17101046442985535, -0.583979606628418, -0.3986962139606476, -1.0020782947540283, -1.5041121244430542, 1.2551339864730835, -1.790816068649292, -1.3146891593933105, 0.1882946491241455, -0.6468368768692017, -2.2180120944976807, -0.09950429201126099, 1.4306659698486328, -1.510566234588623, -0.16097450256347656, 0.8187886476516724, 1.7592694759368896, -0.24912667274475098, -0.5001004338264465, 2.1097826957702637, -0.8148682117462158, 1.022570013999939, -1.026345133781433, 0.5780826807022095, -1.260010004043579, -0.5337724685668945, 0.2412828803062439, -0.39735496044158936, -0.6042805910110474, 0.8677074909210205, 0.37482714653015137, -1.2130519151687622, 0.17746329307556152, -0.8658469915390015, -0.7056511640548706, -1.9576125144958496, -0.1540074497461319, -0.3665564954280853, 0.5644605159759521, -0.2863677740097046, -1.5116617679595947, -0.20817691087722778, -0.6523915529251099, -1.4856263399124146, -0.31622859835624695, 0.8415147662162781, -0.3679654002189636, -1.5237858295440674, -0.771703839302063, 0.1558377742767334, 0.06447821855545044, -1.0861736536026, -0.1551133394241333, -1.2654836177825928, 0.9901861548423767, 0.648493766784668, -1.3045529127120972, 1.8421735763549805, -1.6071250438690186, -0.7707439661026001, 0.657103419303894, -2.0517947673797607, 1.3940613269805908, -1.3675743341445923, 0.2052326798439026, -1.2058384418487549, -0.5970756411552429, 1.5952472686767578, -0.14804455637931824, 0.9206142425537109, -1.7666292190551758, -0.4127735197544098, -1.5770443677902222, -0.7260295152664185, 0.6219533681869507, 0.037217915058135986, 1.2161387205123901, 0.4414260983467102, 0.1714990735054016, 0.5410345196723938, 0.8029576539993286, -0.569583535194397, -2.3190228939056396, -0.18657726049423218, 0.810499906539917, -0.22506028413772583, -0.45587077736854553, -0.6116254329681396, -0.20244860649108887, -0.6175466775894165, -0.20423924922943115, -2.600314140319824, -1.9580763578414917, 1.6272773742675781, 0.37644410133361816, -0.26294344663619995, -0.3087737560272217, 0.3765714168548584, 0.019489169120788574, -0.6408675312995911, -2.9485816955566406, -1.0270758867263794, 1.2931373119354248, -0.2540751099586487, -1.0305202007293701, 2.6034648418426514, -0.42308735847473145, -1.5058894157409668, 1.7390375137329102, 0.7005529403686523, -0.367235392332077, -0.3080960512161255, -1.1845269203186035, 0.25305694341659546, -2.1472933292388916, -0.1843988597393036, 1.9096252918243408, -0.8545504808425903, -0.17268501222133636, -0.282149076461792, -0.014675021171569824, -0.5006074905395508, -0.4021104574203491, 1.350738286972046, 0.20500649511814117, -1.709295630455017, -0.7725138068199158, -0.6206029653549194, -1.4960123300552368, -0.7839515209197998, -0.3359457850456238, 0.17334437370300293, 0.10878825187683105, -1.310206651687622, 0.856897234916687, -0.29893583059310913, 1.7918020486831665, 0.07186540961265564, -0.9897572994232178, -1.030036211013794, -2.062427043914795, -1.2286056280136108, -1.3428561687469482, -1.381187915802002, -0.9480253458023071, -0.11754268407821655, 0.7465386390686035, -0.6571478843688965, -3.532810926437378, -1.5564298629760742, 0.5545393824577332, 0.3074137270450592, 1.5472019910812378, -1.1066303253173828, 0.2713208496570587, -0.4074486494064331, -0.05711880326271057, -0.9125859141349792, -0.5897314548492432, -2.0429434776306152, 0.008627181872725487, 0.07348333299160004, -1.4878801107406616, 0.2875324487686157, -1.206552267074585, -1.2670071125030518, 0.9425849914550781, 1.3680150508880615, -1.6825792789459229, 0.5733710527420044, -2.0655722618103027, -1.4301155805587769, 0.1289823055267334, -2.649685859680176, -0.5525549650192261, 1.0602465867996216, -1.4356977939605713, -1.445085883140564, -0.7231596112251282, -1.8190696239471436, -3.0890066623687744, -1.1159695386886597, -1.5563709735870361, -1.0397634506225586, -1.189470648765564, 0.6794037818908691, -1.3798253536224365, -2.993328809738159, -1.038891315460205, 0.30925559997558594, -0.5391353368759155, -0.8730432987213135, -2.3408384323120117, 2.077526092529297, -0.2362823635339737, 0.7310579419136047, 0.9965691566467285, -0.529421329498291, 1.852540135383606, 0.06193965673446655, -2.0779404640197754, -1.2127480506896973, -0.89513099193573, -0.30659034848213196, 1.469918966293335, -1.1654963493347168, -0.6914346218109131, -0.4246886670589447, -0.766287088394165, -1.1927841901779175, 0.12993058562278748, -0.15080782771110535, 1.6612775325775146, -0.16909176111221313, -1.1627830266952515, 0.5206851363182068, 0.3293185830116272, 1.8134400844573975, -0.6254276037216187, -0.35896384716033936, -0.6131898164749146, 2.8747096061706543, -1.2225005626678467, 0.8010810017585754, 0.3363962173461914, -1.158056378364563};

int8_t* filter_tensor_data=filter_raw;
float* bias_tensor_data=bias_raw;

bool has_conv_bias=true;
int stride_width=1;
int stride_height=1;
TfLiteFusedActivation activation=kTfLiteActNone;
int dilation_width_factor=1;
int dilation_height_factor=1;
const int filter_dims_size=4;
const int filter_dims_raw[4]={1,5,5,1152};
const int bias_dims_size=1;
const int32_t bias_dims_raw[1]={1152};
TfLitePadding paddings=kTfLitePaddingSame;
TfLiteType filter_type=kTfLiteInt8;
TfLiteType bias_type=kTfLiteFloat32;
const float scale_filter=0.0;
const int32_t zero_point_filter=0;
const float scale_bias=0.0;
const int32_t zero_point_bias=0;

struct OpData {
  TfLitePaddingValues padding;
  // The scaling factor from input to output (aka the 'real multiplier') can
  // be represented as a fixed point multiplier plus a left shift.
  int32_t output_multiplier;
  int output_shift;
  // The range of the fused activation layer. For example for kNone and
  // uint8_t these would be 0 and 255.
  int32_t output_activation_min;
  int32_t output_activation_max;

  // Per channel output multiplier and shift.
  std::vector<int32_t> per_channel_output_multiplier;
  std::vector<int> per_channel_output_shift;

  // Hybrid per channel temporary tensors.
  int input_quantized_id = kTensorNotAllocated;
  int scaling_factors_id = kTensorNotAllocated;
  int input_offset_id = kTensorNotAllocated;
  int32_t input_quantized_index;
  int32_t scaling_factors_index;
  int32_t input_offset_index;
};

void ExtractDepthConvParams(TfLitePadding padding, int stride_width, int stride_height,
                               int dilation_width_factor, int dilation_height_factor,
                               TfLiteFusedActivation activation,
                               TfLiteDepthwiseConvParams* data_params) {
  // TfLiteDepthwiseConvParams data_params;
  data_params->padding = padding;
  data_params->stride_width = stride_width;
  data_params->stride_height = stride_height;
  data_params->dilation_width_factor = dilation_width_factor;
  data_params->dilation_height_factor = dilation_height_factor;
  data_params->activation = activation;
  // return data_params;
}

void GetDepthConvTensor(TfLiteType type, const char* name, TfLiteIntArray* tensor_dims_data, 
                       TfLiteQuantizationParams quant_params, char* tensor_data,
                       TfLiteAffineQuantization* quant_struct, size_t bytes_size,
                       TfLiteTensor* tensor) {
  tensor->type = type;
  tensor->name = name;
  tensor->dims = tensor_dims_data;
  tensor->params = quant_params;
  // tensor->data.raw = reinterpret_cast<char*>(tensor_data);
  tensor->data.raw = tensor_data;
  tensor->bytes = bytes_size;
  tensor->allocation_type = kTfLiteMemNone;
  // data_0.allocation = allocation;
  tensor->is_variable = false;
  if (type != kTfLiteFloat32) {
    tensor->quantization.type = kTfLiteAffineQuantization;
    tensor->quantization.params = quant_struct;
  } else {
    tensor->quantization.type = kTfLiteNoQuantization;
  }
  tensor->sparsity = nullptr;
}
void* Init(TfLiteContext* context, const char* buffer, size_t length) {
  // This is a builtin op, so we don't use the contents in 'buffer', if any.
  // Instead, we allocate a new object to carry information from Prepare() to
  // Eval().
  return new OpData;
}

void Free(TfLiteContext* context, void* buffer) {
  delete reinterpret_cast<OpData*>(buffer);
}

TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {
  // auto* params =
  //     reinterpret_cast<TfLiteDepthwiseConvParams*>(node->builtin_data);
  TfLiteDepthwiseConvParams data_params;
  ExtractDepthConvParams(paddings, stride_width, stride_height, dilation_width_factor, dilation_height_factor, activation, &data_params);
  TfLiteDepthwiseConvParams* params = &data_params;

  OpData* data = reinterpret_cast<OpData*>(node->user_data);

  bool has_bias = false;

  // TF_LITE_ENSURE(context, has_bias || NumInputs(node) == 2);
  const TfLiteTensor* input;
  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));
  TfLiteTensor filter_tensor;
  TfLiteIntArray* filter_dims_data = TfLiteIntArrayCreate(filter_dims_size);
  int size_filter = 1;
  for (int i = 0; i < filter_dims_size; i++) {
    // std::cout << "dims_raw: " << dims_raw[i] << std::endl;
    filter_dims_data->data[i] = filter_dims_raw[i];
    size_filter *= filter_dims_raw[i];
  }
  size_t bytes_size_filter = sizeof(float) * size_filter;
  TfLiteQuantizationParams filter_params;
  filter_params.scale=scale_filter;
  filter_params.zero_point=zero_point_filter;
  TfLiteFloatArray* scale_array_filter = TfLiteFloatArrayCreate(1);
  scale_array_filter->data[0] = scale_filter;
  TfLiteIntArray* zero_point_array_filter = TfLiteIntArrayCreate(1);
  zero_point_array_filter->data[0] = zero_point_filter;

  TfLiteAffineQuantization quant_struct_filter;
  quant_struct_filter.scale = scale_array_filter;
  quant_struct_filter.zero_point = zero_point_array_filter;
  quant_struct_filter.quantized_dimension = 0;
  // float* filter_data;
  // filter_tensor_data = filter_raw;
  GetDepthConvTensor(filter_type, "filter", filter_dims_data, filter_params,
                       reinterpret_cast<char*>(filter_tensor_data),
                       &quant_struct_filter, bytes_size_filter, &filter_tensor);
  const TfLiteTensor* filter = &filter_tensor;
  // TF_LITE_ENSURE_OK(context,
  //                   GetInputSafe(context, node, kFilterTensor, &filter));
  const TfLiteTensor* bias = nullptr;

  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
  TfLiteTensor* output;
  TF_LITE_ENSURE_OK(context,
                    GetOutputSafe(context, node, kOutputTensor, &output));

  TF_LITE_ENSURE_EQ(context, NumDimensions(input), 4);
  TF_LITE_ENSURE_EQ(context, NumDimensions(filter), 4);
  TF_LITE_ENSURE(context, params->dilation_height_factor > 0);
  TF_LITE_ENSURE(context, params->dilation_width_factor > 0);

  const TfLiteType data_type = input->type;

  const TfLiteType filter_type = filter->type;
  const bool is_hybrid =
      data_type == kTfLiteFloat32 && filter_type == kTfLiteInt8;
  TF_LITE_ENSURE(context,
                 data_type == kTfLiteFloat32 || data_type == kTfLiteUInt8 ||
                     data_type == kTfLiteInt8 || data_type == kTfLiteInt16);
  TF_LITE_ENSURE_TYPES_EQ(context, output->type, data_type);
  if (!is_hybrid) {
    TF_LITE_ENSURE(context,
                   filter->type == data_type || data_type == kTfLiteInt16);
  }

  if (data_type == kTfLiteInt16) {
    TF_LITE_ENSURE_EQ(context, input->params.zero_point, 0);
    TF_LITE_ENSURE_EQ(context, output->params.zero_point, 0);
  }

  // Filter in DepthwiseConv is expected to be [1, H, W, O].
  TF_LITE_ENSURE_EQ(context, SizeOfDimension(filter, 0), 1);

  if (has_bias) {
    TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kBiasTensor, &bias));
    if (data_type == kTfLiteUInt8 || data_type == kTfLiteInt8) {
      TF_LITE_ENSURE_TYPES_EQ(context, bias->type, kTfLiteInt32);
      TF_LITE_ENSURE_EQ(context, bias->params.zero_point, 0);
    } else if (data_type == kTfLiteInt16) {
      TF_LITE_ENSURE_TYPES_EQ(context, bias->type, kTfLiteInt64);
      TF_LITE_ENSURE_EQ(context, bias->params.zero_point, 0);
    } else {
      TF_LITE_ENSURE_TYPES_EQ(context, bias->type, data_type);
    }
    TF_LITE_ENSURE_EQ(context, NumDimensions(bias), 1);
    TF_LITE_ENSURE_EQ(context, SizeOfDimension(filter, 3),
                      SizeOfDimension(bias, 0));
  }

  int channels_out = SizeOfDimension(filter, 3);
  int width = SizeOfDimension(input, 2);
  int height = SizeOfDimension(input, 1);
  int filter_width = SizeOfDimension(filter, 2);
  int filter_height = SizeOfDimension(filter, 1);
  int batches = SizeOfDimension(input, 0);

  // Matching GetWindowedOutputSize in TensorFlow.
  auto padding = params->padding;
  int out_width, out_height;

  data->padding = ComputePaddingHeightWidth(
      params->stride_height, params->stride_width,
      params->dilation_height_factor, params->dilation_width_factor, height,
      width, filter_height, filter_width, padding, &out_height, &out_width);

  // Note that quantized inference requires that all tensors have their
  // parameters set. This is usually done during quantized training or
  // calibration.
  if (data_type != kTfLiteFloat32) {
    TF_LITE_ENSURE_EQ(context, filter->quantization.type,
                      kTfLiteAffineQuantization);
    TF_LITE_ENSURE(context, filter->quantization.type != kTfLiteNoQuantization);
    const auto* affine_quantization =
        reinterpret_cast<TfLiteAffineQuantization*>(
            filter->quantization.params);
    TF_LITE_ENSURE(context, affine_quantization);
    TF_LITE_ENSURE(context, affine_quantization->scale);
    TF_LITE_ENSURE(context, (affine_quantization->scale->size == 1 ||
                             affine_quantization->scale->size == channels_out));

    data->per_channel_output_multiplier.resize(channels_out);
    data->per_channel_output_shift.resize(channels_out);
    TF_LITE_ENSURE_STATUS(tflite::PopulateConvolutionQuantizationParams(
        context, input, filter, bias, output, params->activation,
        &data->output_multiplier, &data->output_shift,
        &data->output_activation_min, &data->output_activation_max,
        data->per_channel_output_multiplier.data(),
        data->per_channel_output_shift.data(), channels_out));
  }

  if (is_hybrid) {
    TF_LITE_ENSURE(context, filter->quantization.type != kTfLiteNoQuantization);
    const auto* affine_quantization =
        reinterpret_cast<TfLiteAffineQuantization*>(
            filter->quantization.params);
    TF_LITE_ENSURE(context, affine_quantization);
    TF_LITE_ENSURE(context, affine_quantization->scale);
    TF_LITE_ENSURE_EQ(
        context, affine_quantization->scale->size,
        filter->dims->data[affine_quantization->quantized_dimension]);

    int temporaries_count = 0;
    data->input_quantized_index = temporaries_count;
    if (data->input_quantized_id == kTensorNotAllocated) {
      TF_LITE_ENSURE_OK(
          context, context->AddTensors(context, 1, &data->input_quantized_id));
    }
    ++temporaries_count;
    data->scaling_factors_index = temporaries_count;
    if (data->scaling_factors_id == kTensorNotAllocated) {
      TF_LITE_ENSURE_OK(
          context, context->AddTensors(context, 1, &data->scaling_factors_id));
    }
    ++temporaries_count;
    data->input_offset_index = temporaries_count;
    if (data->input_offset_id == kTensorNotAllocated) {
      TF_LITE_ENSURE_OK(
          context, context->AddTensors(context, 1, &data->input_offset_id));
    }
    ++temporaries_count;

    TfLiteIntArrayFree(node->temporaries);
    node->temporaries = TfLiteIntArrayCreate(temporaries_count);

    node->temporaries->data[data->input_quantized_index] =
        data->input_quantized_id;
    TfLiteTensor* input_quantized;
    TF_LITE_ENSURE_OK(
        context, GetTemporarySafe(context, node, data->input_quantized_index,
                                  &input_quantized));
    input_quantized->type = kTfLiteInt8;
    input_quantized->allocation_type = kTfLiteArenaRw;
    if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {
      TfLiteIntArray* input_quantized_size = TfLiteIntArrayCopy(input->dims);
      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, input_quantized,
                                                       input_quantized_size));
    }
    node->temporaries->data[data->scaling_factors_index] =
        data->scaling_factors_id;
    TfLiteTensor* scaling_factors;
    TF_LITE_ENSURE_OK(
        context, GetTemporarySafe(context, node, data->scaling_factors_index,
                                  &scaling_factors));
    scaling_factors->type = kTfLiteFloat32;
    scaling_factors->allocation_type = kTfLiteArenaRw;
    const int batch_size = SizeOfDimension(input, 0);
    int scaling_dims[1] = {batch_size};
    if (!TfLiteIntArrayEqualsArray(scaling_factors->dims, 1, scaling_dims)) {
      TfLiteIntArray* scaling_factors_size = TfLiteIntArrayCreate(1);
      scaling_factors_size->data[0] = batch_size;
      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, scaling_factors,
                                                       scaling_factors_size));
    }
    node->temporaries->data[data->input_offset_index] = data->input_offset_id;
    TfLiteTensor* input_offsets;
    TF_LITE_ENSURE_OK(context,
                      GetTemporarySafe(context, node, data->input_offset_index,
                                       &input_offsets));
    input_offsets->type = kTfLiteInt32;
    input_offsets->allocation_type = kTfLiteArenaRw;
    if (!TfLiteIntArrayEqualsArray(input_offsets->dims, 1, scaling_dims)) {
      TfLiteIntArray* input_offsets_size = TfLiteIntArrayCreate(1);
      input_offsets_size->data[0] = batch_size;
      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, input_offsets,
                                                       input_offsets_size));
    }
  }

  TfLiteIntArray* outputSize = TfLiteIntArrayCreate(4);
  outputSize->data[0] = batches;
  outputSize->data[1] = out_height;
  outputSize->data[2] = out_width;
  outputSize->data[3] = channels_out;
  return context->ResizeTensor(context, output, outputSize);
}

TfLiteStatus ComputeDepthMultiplier(TfLiteContext* context,
                                    const TfLiteTensor* input,
                                    const TfLiteTensor* filter,
                                    int16* depth_multiplier) {
  int num_filter_channels = SizeOfDimension(filter, 3);
  int num_input_channels = SizeOfDimension(input, 3);
  TF_LITE_ENSURE(context, num_input_channels != 0);
  TF_LITE_ENSURE_EQ(context, num_filter_channels % num_input_channels, 0);
  *depth_multiplier = num_filter_channels / num_input_channels;
  return kTfLiteOk;
}

template <KernelType kernel_type>
TfLiteStatus EvalFloat(TfLiteContext* context, TfLiteNode* node,
                       TfLiteDepthwiseConvParams* params, OpData* data,
                       const TfLiteTensor* input, const TfLiteTensor* filter,
                       const TfLiteTensor* bias, TfLiteTensor* output) {
  float output_activation_min, output_activation_max;
  CalculateActivationRange(params->activation, &output_activation_min,
                           &output_activation_max);

  DepthwiseParams op_params;
  op_params.padding_type = PaddingType::kSame;
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.stride_width = params->stride_width;
  op_params.stride_height = params->stride_height;
  op_params.dilation_width_factor = params->dilation_width_factor;
  op_params.dilation_height_factor = params->dilation_height_factor;
  op_params.float_activation_min = output_activation_min;
  op_params.float_activation_max = output_activation_max;
  TF_LITE_ENSURE_STATUS(ComputeDepthMultiplier(context, input, filter,
                                               &op_params.depth_multiplier));
  if (kernel_type == kReference) {
    reference_ops::DepthwiseConv(
        op_params, GetTensorShape(input), GetTensorData<float>(input),
        GetTensorShape(filter), GetTensorData<float>(filter),
        GetTensorShape(bias), GetTensorData<float>(bias),
        GetTensorShape(output), GetTensorData<float>(output));
  } else {
    optimized_ops::DepthwiseConv<float, float>(
        op_params, GetTensorShape(input), GetTensorData<float>(input),
        GetTensorShape(filter), GetTensorData<float>(filter),
        GetTensorShape(bias), GetTensorData<float>(bias),
        GetTensorShape(output), GetTensorData<float>(output),
        CpuBackendContext::GetFromContext(context));
  }
  return kTfLiteOk;
}

template <KernelType kernel_type>
TfLiteStatus EvalQuantized(TfLiteContext* context, TfLiteNode* node,
                           TfLiteDepthwiseConvParams* params, OpData* data,
                           const TfLiteTensor* input,
                           const TfLiteTensor* filter, const TfLiteTensor* bias,
                           TfLiteTensor* output) {
  auto input_offset = -input->params.zero_point;
  auto filter_offset = -filter->params.zero_point;
  auto output_offset = output->params.zero_point;

  DepthwiseParams op_params;
  op_params.padding_type = PaddingType::kSame;
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.stride_width = params->stride_width;
  op_params.stride_height = params->stride_height;
  op_params.dilation_width_factor = params->dilation_width_factor;
  op_params.dilation_height_factor = params->dilation_height_factor;
  op_params.input_offset = input_offset;
  op_params.weights_offset = filter_offset;
  op_params.output_offset = output_offset;
  op_params.output_multiplier = data->output_multiplier;
  op_params.output_shift = -data->output_shift;
  op_params.quantized_activation_min = data->output_activation_min;
  op_params.quantized_activation_max = data->output_activation_max;
  TF_LITE_ENSURE_STATUS(ComputeDepthMultiplier(context, input, filter,
                                               &op_params.depth_multiplier));
  if (kernel_type == kReference) {
    reference_ops::DepthwiseConv(
        op_params, GetTensorShape(input), GetTensorData<uint8_t>(input),
        GetTensorShape(filter), GetTensorData<uint8_t>(filter),
        GetTensorShape(bias), GetTensorData<int32_t>(bias),
        GetTensorShape(output), GetTensorData<uint8_t>(output));
  } else {
    optimized_ops::DepthwiseConv<uint8, int32>(
        op_params, GetTensorShape(input), GetTensorData<uint8_t>(input),
        GetTensorShape(filter), GetTensorData<uint8_t>(filter),
        GetTensorShape(bias), GetTensorData<int32_t>(bias),
        GetTensorShape(output), GetTensorData<uint8_t>(output),
        CpuBackendContext::GetFromContext(context));
  }
  return kTfLiteOk;
}

template <KernelType kernel_type>
TfLiteStatus EvalQuantizedPerChannel(TfLiteContext* context, TfLiteNode* node,
                                     TfLiteDepthwiseConvParams* params,
                                     OpData* data, const TfLiteTensor* input,
                                     const TfLiteTensor* filter,
                                     const TfLiteTensor* bias,
                                     TfLiteTensor* output) {
  DepthwiseParams op_params;
  op_params.padding_type = PaddingType::kSame;
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.stride_width = params->stride_width;
  op_params.stride_height = params->stride_height;
  op_params.dilation_width_factor = params->dilation_width_factor;
  op_params.dilation_height_factor = params->dilation_height_factor;
  op_params.input_offset = -input->params.zero_point;
  op_params.weights_offset = 0;
  op_params.output_offset = output->params.zero_point;
  op_params.quantized_activation_min = data->output_activation_min;
  op_params.quantized_activation_max = data->output_activation_max;
  TF_LITE_ENSURE_STATUS(ComputeDepthMultiplier(context, input, filter,
                                               &op_params.depth_multiplier));

  if (kernel_type == kReference) {
    reference_integer_ops::DepthwiseConvPerChannel(
        op_params, data->per_channel_output_multiplier.data(),
        data->per_channel_output_shift.data(), GetTensorShape(input),
        GetTensorData<int8>(input), GetTensorShape(filter),
        GetTensorData<int8>(filter), GetTensorShape(bias),
        GetTensorData<int32>(bias), GetTensorShape(output),
        GetTensorData<int8>(output));
  } else {
    optimized_integer_ops::DepthwiseConvPerChannel(
        op_params, data->per_channel_output_multiplier.data(),
        data->per_channel_output_shift.data(), GetTensorShape(input),
        GetTensorData<int8>(input), GetTensorShape(filter),
        GetTensorData<int8>(filter), GetTensorShape(bias),
        GetTensorData<int32>(bias), GetTensorShape(output),
        GetTensorData<int8>(output),
        CpuBackendContext::GetFromContext(context));
  }
  return kTfLiteOk;
}

TfLiteStatus EvalQuantizedPerChannel16x8(
    const TfLiteDepthwiseConvParams* params, const OpData* data,
    const TfLiteTensor* input, const TfLiteTensor* filter,
    const TfLiteTensor* bias, TfLiteTensor* output) {
  DepthwiseParams op_params;
  op_params.padding_type = PaddingType::kSame;
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.stride_width = params->stride_width;
  op_params.stride_height = params->stride_height;
  op_params.dilation_width_factor = params->dilation_width_factor;
  op_params.dilation_height_factor = params->dilation_height_factor;
  op_params.depth_multiplier = params->depth_multiplier;
  op_params.weights_offset = 0;
  op_params.quantized_activation_min = data->output_activation_min;
  op_params.quantized_activation_max = data->output_activation_max;

  reference_integer_ops::DepthwiseConvPerChannel(
      op_params, data->per_channel_output_multiplier.data(),
      data->per_channel_output_shift.data(), GetTensorShape(input),
      GetTensorData<int16>(input), GetTensorShape(filter),
      GetTensorData<int8>(filter), GetTensorShape(bias),
      GetTensorData<std::int64_t>(bias), GetTensorShape(output),
      GetTensorData<int16>(output));

  return kTfLiteOk;
}

template <KernelType kernel_type>
TfLiteStatus EvalHybridPerChannel(TfLiteContext* context, TfLiteNode* node,
                                  TfLiteDepthwiseConvParams* params,
                                  OpData* data, const TfLiteTensor* input,
                                  const TfLiteTensor* filter,
                                  const TfLiteTensor* bias,
                                  TfLiteTensor* output) {
  float output_activation_min, output_activation_max;
  CalculateActivationRange(params->activation, &output_activation_min,
                           &output_activation_max);
  const int batch_size = SizeOfDimension(input, 0);
  TF_LITE_ENSURE(context, batch_size != 0);
  const int input_size = NumElements(input) / batch_size;
  TfLiteTensor* input_quantized;
  TF_LITE_ENSURE_OK(context,
                    GetTemporarySafe(context, node, data->input_quantized_index,
                                     &input_quantized));
  int8_t* quantized_input_ptr_batch = input_quantized->data.int8;
  TfLiteTensor* scaling_factors_tensor;
  TF_LITE_ENSURE_OK(context,
                    GetTemporarySafe(context, node, data->scaling_factors_index,
                                     &scaling_factors_tensor));
  float* scaling_factors_ptr = GetTensorData<float>(scaling_factors_tensor);
  TfLiteTensor* input_offset_tensor;
  TF_LITE_ENSURE_OK(context,
                    GetTemporarySafe(context, node, data->input_offset_index,
                                     &input_offset_tensor));
  int32_t* input_offset_ptr = GetTensorData<int32_t>(input_offset_tensor);

  for (int b = 0; b < batch_size; ++b) {
    const int offset = b * input_size;
    tensor_utils::AsymmetricQuantizeFloats(
        GetTensorData<float>(input) + offset, input_size,
        quantized_input_ptr_batch + offset, &scaling_factors_ptr[b],
        &input_offset_ptr[b]);
  }

  DepthwiseParams op_params;
  op_params.padding_type = PaddingType::kSame;
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.stride_width = params->stride_width;
  op_params.stride_height = params->stride_height;
  op_params.dilation_width_factor = params->dilation_width_factor;
  op_params.dilation_height_factor = params->dilation_height_factor;
  op_params.depth_multiplier = params->depth_multiplier;

  op_params.weights_offset = 0;
  op_params.float_activation_min = output_activation_min;
  op_params.float_activation_max = output_activation_max;
  TF_LITE_ENSURE(context, filter->quantization.type != kTfLiteNoQuantization);
  const auto* affine_quantization =
      reinterpret_cast<TfLiteAffineQuantization*>(filter->quantization.params);
  if (kernel_type == kReference) {
    reference_integer_ops::DepthwiseConvHybridPerChannel(
        op_params, scaling_factors_ptr, GetTensorShape(input),
        quantized_input_ptr_batch, GetTensorShape(filter),
        GetTensorData<int8>(filter), GetTensorShape(bias),
        GetTensorData<float>(bias), GetTensorShape(output),
        GetTensorData<float>(output), affine_quantization->scale->data,
        input_offset_ptr);
  } else {
    optimized_integer_ops::DepthwiseConvHybridPerChannel(
        op_params, scaling_factors_ptr, GetTensorShape(input),
        quantized_input_ptr_batch, GetTensorShape(filter),
        GetTensorData<int8>(filter), GetTensorShape(bias),
        GetTensorData<float>(bias), GetTensorShape(output),
        GetTensorData<float>(output), affine_quantization->scale->data,
        input_offset_ptr, CpuBackendContext::GetFromContext(context));
  }

  return kTfLiteOk;
}

template <KernelType kernel_type, TfLiteType input_type>
TfLiteStatus EvalImpl(TfLiteContext* context, TfLiteNode* node) {
  // auto* params =
  //     reinterpret_cast<TfLiteDepthwiseConvParams*>(node->builtin_data);
  TfLiteDepthwiseConvParams data_params;
  ExtractDepthConvParams(paddings, stride_width, stride_height, dilation_width_factor, dilation_height_factor, activation, &data_params);
  TfLiteDepthwiseConvParams* params = &data_params;

  OpData* data = reinterpret_cast<OpData*>(node->user_data);

  TfLiteTensor* output;
  TF_LITE_ENSURE_OK(context,
                    GetOutputSafe(context, node, kOutputTensor, &output));
  const TfLiteTensor* input;
  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));
  // const TfLiteTensor* filter;
  // TF_LITE_ENSURE_OK(context,
  //                   GetInputSafe(context, node, kFilterTensor, &filter));
  TfLiteTensor filter_tensor;
  TfLiteIntArray* filter_dims_data = TfLiteIntArrayCreate(filter_dims_size);
  int size_filter = 1;
  for (int i = 0; i < filter_dims_size; i++) {
    // std::cout << "dims_raw: " << dims_raw[i] << std::endl;
    filter_dims_data->data[i] = filter_dims_raw[i];
    size_filter *= filter_dims_raw[i];
  }
  size_t bytes_size_filter = sizeof(float) * size_filter;
  TfLiteQuantizationParams filter_params;
  filter_params.scale=scale_filter;
  filter_params.zero_point=zero_point_filter;

  TfLiteFloatArray* scale_array_filter = TfLiteFloatArrayCreate(1);
  scale_array_filter->data[0] = scale_filter;
  TfLiteIntArray* zero_point_array_filter = TfLiteIntArrayCreate(1);
  zero_point_array_filter->data[0] = zero_point_filter;

  TfLiteAffineQuantization quant_struct_filter;
  quant_struct_filter.scale = scale_array_filter;
  quant_struct_filter.zero_point = zero_point_array_filter;
  quant_struct_filter.quantized_dimension = 0;
  // float* filter_data;
  // filter_tensor_data = filter_raw;
  GetDepthConvTensor(filter_type, "filter", filter_dims_data, filter_params,
                       reinterpret_cast<char*>(filter_tensor_data),
                       &quant_struct_filter, bytes_size_filter, &filter_tensor);
  const TfLiteTensor* filter = &filter_tensor;
  // const TfLiteTensor* bias =
  //     (NumInputs(node) == 3) ? GetInput(context, node, kBiasTensor) : nullptr;
  TfLiteTensor bias_tensor;
  const TfLiteTensor* bias;
  if (has_conv_bias) {
    TfLiteIntArray* bias_dims_data = TfLiteIntArrayCreate(bias_dims_size);
    int size_bias = 1;
    for (int i = 0; i < bias_dims_size; i++) {
      // std::cout << "dims_raw: " << dims_raw[i] << std::endl;
      bias_dims_data->data[i] = bias_dims_raw[i];
      size_bias *= bias_dims_raw[i];
    }
    size_t bytes_size_bias = sizeof(float) * size_bias;
    TfLiteQuantizationParams bias_params;
    bias_params.scale=scale_bias;
    bias_params.zero_point=zero_point_bias;

    TfLiteFloatArray* scale_array_bias = TfLiteFloatArrayCreate(1);
    scale_array_bias->data[0] = scale_bias;
    TfLiteIntArray* zero_point_array_bias = TfLiteIntArrayCreate(1);
    zero_point_array_bias->data[0] = zero_point_bias;

    TfLiteAffineQuantization quant_struct_bias;
    quant_struct_bias.scale = scale_array_bias;
    quant_struct_bias.zero_point = zero_point_array_bias;
    quant_struct_bias.quantized_dimension = 0;
    
    // float* bias_data;
    // bias_tensor_data = bias_raw;
    GetDepthConvTensor(bias_type, "bias", bias_dims_data, bias_params,
                        reinterpret_cast<char*>(bias_tensor_data), 
                        &quant_struct_bias, bytes_size_bias, &bias_tensor);
    bias = &bias_tensor;
  } else {
    bias = nullptr;
  }

  TFLITE_DCHECK_EQ(input_type, input->type);

  switch (input_type) {  // Already know in/out types are same.
    case kTfLiteFloat32:
      if (filter->type == kTfLiteFloat32) {
        return EvalFloat<kernel_type>(context, node, params, data, input,
                                      filter, bias, output);
      } else if (filter->type == kTfLiteInt8) {
        return EvalHybridPerChannel<kernel_type>(context, node, params, data,
                                                 input, filter, bias, output);
      } else {
        TF_LITE_KERNEL_LOG(
            context, "Type %s with filter type %s not currently supported.",
            TfLiteTypeGetName(input->type), TfLiteTypeGetName(filter->type));
        return kTfLiteError;
      }
      break;
    case kTfLiteUInt8:
      return EvalQuantized<kernel_type>(context, node, params, data, input,
                                        filter, bias, output);
      break;
    case kTfLiteInt8:
      return EvalQuantizedPerChannel<kernel_type>(context, node, params, data,
                                                  input, filter, bias, output);
      break;
    case kTfLiteInt16:
      return EvalQuantizedPerChannel16x8(params, data, input, filter, bias,
                                         output);
      break;
    default:
      context->ReportError(context, "Type %d not currently supported.",
                           input->type);
      return kTfLiteError;
  }
}

template <KernelType kernel_type>
TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {
  const TfLiteTensor* input;
  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));

  switch (input->type) {  // Already know in/out types are same.
    case kTfLiteFloat32:
      return EvalImpl<kernel_type, kTfLiteFloat32>(context, node);
    case kTfLiteUInt8:
      return EvalImpl<kernel_type, kTfLiteUInt8>(context, node);
    case kTfLiteInt8:
      return EvalImpl<kernel_type, kTfLiteInt8>(context, node);
    case kTfLiteInt16:
      return EvalImpl<kernel_type, kTfLiteInt16>(context, node);
    default:
      context->ReportError(context, "Type %d not currently supported.",
                           input->type);
      return kTfLiteError;
  }
}

}  // namespace jvrcfh

TfLiteRegistration* Register_jvrcfh_REF() {
  static TfLiteRegistration r = {
      jvrcfh::Init, jvrcfh::Free, jvrcfh::Prepare,
      jvrcfh::Eval<jvrcfh::kReference>};
  return &r;
}

TfLiteRegistration* Register_jvrcfh_GENERIC_OPT() {
  static TfLiteRegistration r = {
      jvrcfh::Init, jvrcfh::Free, jvrcfh::Prepare,
      jvrcfh::Eval<jvrcfh::kGenericOptimized>};
  return &r;
}

TfLiteRegistration* Register_jvrcfh_NEON_OPT() {
  static TfLiteRegistration r = {
      jvrcfh::Init, jvrcfh::Free, jvrcfh::Prepare,
      jvrcfh::Eval<jvrcfh::kNeonOptimized>};
  return &r;
}

TfLiteRegistration* Register_jvrcfh_NEON_OPT_UINT8() {
  static TfLiteRegistration r = {
      jvrcfh::Init, jvrcfh::Free, jvrcfh::Prepare,
      jvrcfh::EvalImpl<jvrcfh::kNeonOptimized, kTfLiteUInt8>};
  return &r;
}

TfLiteRegistration* Register_jvrcfh() {
#ifdef USE_NEON
  return Register_jvrcfh_NEON_OPT();
#else
  return Register_jvrcfh_GENERIC_OPT();
#endif
}

// Warning: Clients using this variant are responsible for ensuring that their
// models only need the UINT8 type. TFLite's op registration mechanism doesn't
// yet allow for more nuanced registration mechanisms.
TfLiteRegistration* Register_jvrcfh_UINT8() {
#ifdef USE_NEON
  return Register_jvrcfh_NEON_OPT_UINT8();
#else
  return Register_jvrcfh();
#endif
}

}  // namespace builtin
}  // namespace ops
}  // namespace tflite
