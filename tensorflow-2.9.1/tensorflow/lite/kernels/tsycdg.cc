/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

#include "tensorflow/lite/kernels/internal/optimized/integer_ops/depthwise_conv.h"

#include <stddef.h>
#include <stdint.h>
#include <vector>

#include "tensorflow/lite/c/builtin_op_data.h"
#include "tensorflow/lite/c/common.h"
#include "tensorflow/lite/kernels/cpu_backend_context.h"
#include "tensorflow/lite/kernels/internal/compatibility.h"
#include "tensorflow/lite/kernels/internal/optimized/cpu_check.h"
#include "tensorflow/lite/kernels/internal/optimized/depthwiseconv_multithread.h"
#include "tensorflow/lite/kernels/internal/optimized/integer_ops/depthwise_conv_hybrid.h"
#include "tensorflow/lite/kernels/internal/optimized/neon_check.h"
#include "tensorflow/lite/kernels/internal/quantization_util.h"
#include "tensorflow/lite/kernels/internal/reference/depthwiseconv_float.h"
#include "tensorflow/lite/kernels/internal/reference/depthwiseconv_uint8.h"
#include "tensorflow/lite/kernels/internal/reference/integer_ops/depthwise_conv.h"
#include "tensorflow/lite/kernels/internal/tensor.h"
#include "tensorflow/lite/kernels/internal/tensor_ctypes.h"
#include "tensorflow/lite/kernels/internal/tensor_utils.h"
#include "tensorflow/lite/kernels/internal/types.h"
#include "tensorflow/lite/kernels/kernel_util.h"
#include "tensorflow/lite/kernels/padding.h"

namespace tflite {
namespace ops {
namespace custom {
namespace tsycdg {

constexpr int kInputTensor = 0;
constexpr int kFilterTensor = 1;
constexpr int kBiasTensor = 2;
constexpr int kOutputTensor = 0;

// This file has three implementation of DepthwiseConv.
enum KernelType {
  kReference,
  kGenericOptimized,  // Neon-free
  kNeonOptimized,
};

const int kTensorNotAllocated = -1;

int8_t filter_r   aw[28800]={};

float bias_raw[1152]={2.0074450969696045, -0.8745017051696777, 0.9874308109283447, 0.01823902130126953, 0.42996811866760254, 0.9188067317008972, 0.0432395339012146, 0.2118464708328247, 0.5896353721618652, 0.8965651988983154, -0.18490764498710632, 0.04576563835144043, 1.9489551782608032, 1.1711996793746948, 0.7101104855537415, 0.2875570058822632, -0.913445234298706, -0.6786777973175049, 0.8702876567840576, -0.5229626297950745, -0.5666590929031372, 0.4334297180175781, 2.049889326095581, -1.6475447416305542, -1.399548053741455, 0.8541479110717773, 1.1103273630142212, 0.557878851890564, 0.5272572040557861, 0.15585267543792725, 2.043952226638794, 0.08123999834060669, -0.47297346591949463, -1.6167274713516235, -0.4742240309715271, -0.3763778805732727, -0.7815983295440674, 0.7134237885475159, 0.5694310665130615, 1.2308704853057861, -0.0734681487083435, 0.7621966600418091, -0.2612822353839874, 0.8503676056861877, -0.7829836010932922, -0.91362464427948, -0.43621522188186646, 1.1364326477050781, 1.6706560850143433, 0.570500373840332, 0.1804291009902954, -1.8040330410003662, 1.067928671836853, -0.33553242683410645, -0.38991379737854004, 1.7796273231506348, -0.7636061906814575, 0.5329688787460327, -0.8027778267860413, 0.014539837837219238, 0.1332385540008545, 0.4052879810333252, 1.0099180936813354, 2.1590983867645264, 0.588355302810669, 0.15463745594024658, 0.14226150512695312, 0.29539698362350464, 0.14025211334228516, 1.3286911249160767, 1.4517163038253784, 0.5435733795166016, -0.807427167892456, -1.3621617555618286, 0.8801223039627075, 0.6841029524803162, 1.0742955207824707, 1.5427683591842651, 1.0394482612609863, 0.2833634614944458, -1.0500268936157227, 0.7675161361694336, 1.3423889875411987, 1.1862610578536987, -0.33667221665382385, 0.8286188244819641, 0.41367971897125244, 0.10925412178039551, -0.5465998649597168, 0.8391594886779785, 0.04136490821838379, -0.03495758771896362, 1.2243595123291016, 1.280125379562378, 2.99680757522583, 0.3780640959739685, -1.7114155292510986, -0.9811396598815918, 0.44105297327041626, -0.5445955395698547, -0.248663067817688, 1.4428120851516724, -1.3825867176055908, 2.314697265625, -1.4393031597137451, 0.5328143835067749, -0.7552871108055115, 1.1123406887054443, -2.8599565029144287, 1.5350568294525146, -1.5089819431304932, 0.03006148338317871, -0.736741840839386, 0.27300000190734863, 1.753180742263794, 0.03164935111999512, 0.575940728187561, 0.9620262384414673, 1.3050402402877808, 1.193484902381897, 0.5116040110588074, 1.4405112266540527, 0.15305040776729584, -0.03770756721496582, 1.1790285110473633, 0.27259814739227295, 0.4765056371688843, 1.1817893981933594, 0.9686112403869629, 1.6823121309280396, 1.427551507949829, -0.9403445720672607, 0.5082166194915771, 0.4494589567184448, 1.6323152780532837, -0.07032895088195801, 0.7325013875961304, 1.6344397068023682, -0.38302046060562134, 1.049465298652649, -2.456550121307373, 1.5316342115402222, 0.5607039928436279, 0.04955458641052246, 0.5830508470535278, 0.7463700771331787, 0.24161005020141602, -0.7694035768508911, -0.8002813458442688, 0.2851743698120117, 1.6812283992767334, 0.678039014339447, -0.8990821838378906, -1.2476657629013062, -1.8912843465805054, 1.7692970037460327, -1.689728856086731, -0.8883898258209229, -1.6874876022338867, -1.5486608743667603, 0.9913572072982788, -0.021521329879760742, 1.839546799659729, -1.998138666152954, -0.08716797828674316, -0.3358047306537628, -0.8644546270370483, -0.8632452487945557, -0.9541094899177551, -0.20529937744140625, 0.6146923303604126, 0.535798192024231, 0.5749779939651489, -0.44875526428222656, 0.13998150825500488, -0.596429169178009, -0.4869247376918793, -1.1676026582717896, -0.1765730381011963, -0.010949254035949707, -0.5260272026062012, -0.713146448135376, 1.2390114068984985, -0.3875271677970886, 1.2690160274505615, 0.3138922452926636, 1.5060698986053467, 1.5737500190734863, -0.9867040514945984, -2.0106377601623535, -0.8046897649765015, 1.1548982858657837, 1.7000746726989746, 1.178910255432129, 2.4609949588775635, 0.19605594873428345, -0.3498293459415436, 1.1056462526321411, -0.3163316547870636, 1.752918004989624, 1.4739770889282227, -0.2542365789413452, -1.7208603620529175, 0.7666049599647522, 1.6917445659637451, -0.5363649129867554, 0.02807566523551941, -1.1332337856292725, -0.3332257866859436, -0.766846239566803, -0.29104089736938477, -0.12185618281364441, 1.5275157690048218, 0.17034196853637695, 0.5958325266838074, 0.6690658330917358, -0.2564274072647095, 1.7756056785583496, 0.8244643807411194, 0.37671875953674316, 0.47353172302246094, 0.5531833171844482, 1.2119405269622803, -1.6617478132247925, 1.1081905364990234, -1.3560270071029663, 1.9004089832305908, -0.22018909454345703, 4.344795227050781, -0.19025743007659912, 1.5112988948822021, 2.2598037719726562, -1.3894410133361816, -2.3070693016052246, 2.0103137493133545, 1.2817624807357788, 1.8869725465774536, 2.43776273727417, -0.328335702419281, -0.3074840307235718, -0.20592817664146423, -0.07092803716659546, 1.942243218421936, 1.1289739608764648, -0.06164443492889404, 1.566464900970459, 0.9757583141326904, 0.6947722434997559, 1.2400720119476318, 0.6779904961585999, 0.508500874042511, 1.718758225440979, 0.36668968200683594, 1.1926981210708618, 0.673344612121582, -0.09614109992980957, 0.7743802070617676, 0.08487749099731445, 0.8309427499771118, -0.8501794934272766, 2.4017064571380615, 0.4228556156158447, 1.607640266418457, 1.2841594219207764, 1.3373116254806519, 1.8295398950576782, -0.11320173740386963, 1.20972740650177, 0.7501052021980286, 0.04904181510210037, 0.12651920318603516, -0.07528293132781982, 1.855658769607544, -0.9483111500740051, -0.8341319561004639, 1.2087101936340332, 2.006765604019165, 1.6005479097366333, 0.013456225395202637, -0.206290602684021, -0.14318537712097168, 0.7591921091079712, 0.8807798027992249, 1.1534581184387207, -3.0824897289276123, -0.9035460948944092, -1.0420682430267334, 0.6797035932540894, 0.027940481901168823, -0.3074284791946411, 0.8291651010513306, -1.33982515335083, 1.1900142431259155, 1.4958093166351318, -0.7403907775878906, 1.3265166282653809, 0.08241599798202515, 0.10756999254226685, 0.8767382502555847, -1.237161636352539, 0.34190553426742554, 0.5737807154655457, -0.49851834774017334, -0.2712893486022949, -0.4890459179878235, -0.6016513705253601, 1.204429268836975, 1.0501708984375, 0.1917281150817871, -0.3542141616344452, 0.7343094944953918, -0.6242645978927612, 0.4754828214645386, 0.4247558116912842, 0.16878741979599, 1.345855712890625, 1.606373906135559, 2.272352695465088, -0.7456834316253662, 0.33282697200775146, 1.82674241065979, 1.1268699169158936, 0.3776817321777344, 1.6198532581329346, 0.8549471497535706, 0.9317116737365723, -0.16938069462776184, -0.7073626518249512, 1.6588094234466553, -1.4499061107635498, 1.297560453414917, -1.5445716381072998, 1.2278263568878174, 0.4522700309753418, 1.333698034286499, -0.3822842836380005, 1.589731216430664, 0.05665069818496704, -0.2539811432361603, 1.463577151298523, 1.6649444103240967, 2.1274633407592773, 0.9997943639755249, 1.0313315391540527, 0.5588939189910889, -0.2646169662475586, 0.5153809785842896, -0.6845091581344604, -0.1386655569076538, -0.0854833722114563, 1.422568440437317, 0.29703450202941895, 2.6438193321228027, -0.522517204284668, 0.8597660064697266, -0.16765224933624268, -1.8885629177093506, 1.276758074760437, -1.5601317882537842, -1.7721729278564453, 1.3598582744598389, -1.306374430656433, 1.2131290435791016, 0.8840878009796143, -0.7272863388061523, -1.2246581315994263, 1.5255515575408936, 0.5311993956565857, -1.3136147260665894, 0.19976088404655457, 0.06689785420894623, -0.16669344902038574, 0.46014702320098877, 0.3907316327095032, 1.3020726442337036, -0.3685557246208191, 1.3847647905349731, 1.0055387020111084, 0.39949172735214233, -0.818151593208313, 0.31016725301742554, 2.1831092834472656, -0.8784319758415222, 0.8895105123519897, 0.8669430017471313, -0.3446505069732666, -1.9625983238220215, 0.5379937887191772, -1.13765287399292, 0.16340017318725586, -1.4421532154083252, -1.6879756450653076, 0.9057009220123291, 2.339603900909424, 1.8988546133041382, 0.29080772399902344, 0.9120282530784607, 1.1964706182479858, -0.5112106800079346, -0.49519824981689453, 0.36719727516174316, 1.9245283603668213, 1.7293577194213867, 0.4294413924217224, 1.82175612449646, -1.0937726497650146, 2.1216015815734863, 1.4322617053985596, -0.022078752517700195, 1.2189232110977173, -0.4649707078933716, 1.4385513067245483, -0.23999738693237305, 0.6794537901878357, -0.7021237015724182, -3.3557066917419434, 0.4068268835544586, 1.3127684593200684, -0.11435617506504059, 2.135897159576416, -0.2080249786376953, -0.25611039996147156, -0.44971513748168945, -0.16094699501991272, -0.9219282865524292, -0.671727180480957, 1.2763211727142334, 2.1269068717956543, 0.8090561032295227, 1.0513505935668945, -0.22396963834762573, 1.3373138904571533, 1.236208438873291, -0.688356876373291, -1.9550942182540894, -1.1118011474609375, 1.432259202003479, 0.4170476198196411, 0.9835547804832458, -0.7341446876525879, 1.7137367725372314, -0.3661472797393799, 0.22244203090667725, 1.7613548040390015, 1.7421196699142456, -0.4705663323402405, -1.9843419790267944, 1.2588040828704834, 1.3286123275756836, 0.8661201000213623, -0.134810209274292, -0.44931307435035706, 1.019015908241272, 0.5502781867980957, -0.08460158109664917, 0.14532333612442017, 0.652652382850647, -0.29503709077835083, 1.0579910278320312, -0.42357337474823, 1.5395448207855225, -0.01621907949447632, -0.6744812726974487, -1.2534042596817017, 0.17795312404632568, -0.7949867248535156, -0.8416537046432495, -1.9173741340637207, 0.5164638161659241, -0.44105228781700134, 1.1113617420196533, -0.32050085067749023, 0.17245998978614807, -0.060263991355895996, 1.1312726736068726, 0.5909404754638672, -0.42945343255996704, -0.09926497936248779, 0.46086612343788147, -1.5430339574813843, 1.1290509700775146, 0.7255511283874512, 1.3259483575820923, 0.7708489298820496, 0.35827529430389404, 1.1779155731201172, -1.4639358520507812, 1.699172854423523, -1.4640238285064697, -0.6351380348205566, 0.059015631675720215, 0.9418003559112549, -0.7340962886810303, 2.302973747253418, 1.0120344161987305, -1.3244552612304688, 0.40747207403182983, -0.21401572227478027, -0.48919814825057983, 0.3865835666656494, -0.6459692716598511, 0.5845811367034912, -0.7207419276237488, 0.6530436873435974, 2.0863263607025146, -1.4064005613327026, -0.9394108057022095, 0.722313404083252, 1.5361454486846924, -0.3469479978084564, -0.37208402156829834, -0.7397946715354919, 0.1527714729309082, 1.8758456707000732, 0.7740631103515625, 0.5013818740844727, 0.14985983073711395, -0.7055639624595642, -0.2499215304851532, 2.5751028060913086, 0.5329316258430481, 0.5958001613616943, 0.7344778180122375, 0.2878601551055908, 1.7848860025405884, 2.513174057006836, 0.9389858245849609, -0.7333642244338989, 0.3277032971382141, -0.7058780789375305, -0.7299425601959229, 0.4133117198944092, 0.2114386409521103, 1.024444341659546, 0.4602348208427429, -0.4985380172729492, 1.012575626373291, -0.02749800682067871, 0.8868352770805359, -1.885624885559082, 1.4634950160980225, -0.19658589363098145, 0.6268434524536133, 0.7911044359207153, 2.119385242462158, -1.448630928993225, 2.8047375679016113, -1.0703290700912476, -0.3211614191532135, 0.6063542366027832, 2.325883150100708, -0.870620608329773, 0.00680619478225708, 1.0116814374923706, 0.8273820281028748, -0.5178403854370117, 1.9163488149642944, -0.2521889805793762, 0.832787275314331, -0.3080684542655945, 2.669585704803467, -0.18305742740631104, -0.5191128253936768, 0.16680359840393066, 0.0845535397529602, -0.9219318628311157, 0.4157257080078125, 0.2548062801361084, 1.4632568359375, 0.8843150734901428, 1.6526764631271362, 0.12757430970668793, 0.3794710636138916, -2.3230347633361816, 2.1828346252441406, -1.561753273010254, 0.23484361171722412, 0.9163062572479248, 0.3732128143310547, -0.1121983528137207, 0.7072701454162598, -0.5168917179107666, -0.6477817296981812, -0.8040017485618591, -1.961779236793518, 0.43403685092926025, 0.7491557002067566, 1.0881961584091187, -1.5145145654678345, 0.22512555122375488, -0.7077345848083496, -0.23241817951202393, 1.66640305519104, -1.1523644924163818, 1.2922422885894775, 1.5494015216827393, 0.36820465326309204, -0.06562390923500061, -0.25010380148887634, -0.1379842758178711, 1.2601038217544556, -1.056746244430542, 0.11960768699645996, -0.15442965924739838, -1.066368818283081, -1.7160841226577759, 1.3477212190628052, 0.6152050495147705, -0.28105098009109497, -0.2757917642593384, 0.302360862493515, 0.763832151889801, 0.7775566577911377, -1.6175843477249146, 0.36527448892593384, -0.5016070008277893, 0.6895025968551636, 1.0301753282546997, -1.0981166362762451, 3.5796403884887695, -0.8081765174865723, -0.24248230457305908, 1.3517709970474243, 1.338722586631775, 0.27873921394348145, 1.8245428800582886, -0.11967390775680542, 1.0780304670333862, 2.0457205772399902, -0.5561134815216064, -0.8618056774139404, 1.4866676330566406, 0.9769905805587769, -0.6750129461288452, -0.5938030481338501, 0.8776557445526123, 0.5385213494300842, 1.1891580820083618, 0.8447838425636292, 0.6318033933639526, 1.1727824211120605, 0.7229400277137756, 0.7328488826751709, 1.4124572277069092, -1.7524874210357666, -1.4778589010238647, 0.34941673278808594, 1.494956374168396, 1.0670228004455566, -2.492213726043701, 0.49942827224731445, 1.1886600255966187, -0.9847694635391235, 0.1728839874267578, -0.009731829166412354, -0.343884140253067, -0.6901237964630127, 1.5385563373565674, 3.2040786743164062, -1.0040392875671387, -0.11407411098480225, 0.8682423830032349, -0.8877650499343872, -0.08358001708984375, 0.30374568700790405, 0.3325103521347046, 0.8069424629211426, 0.4660765528678894, 0.08502182364463806, -0.2632893919944763, 0.08135628700256348, -1.479201316833496, -3.1112847328186035, 0.2849980592727661, 1.5123291015625, 1.443864107131958, 0.22951501607894897, -0.5324617028236389, 2.1522319316864014, -2.083115577697754, -0.10142114758491516, 0.25555455684661865, 1.2350281476974487, 0.5985407829284668, -1.4027209281921387, -0.9888365268707275, 1.1112210750579834, 1.5214533805847168, -0.29038500785827637, 1.5777192115783691, 0.45394766330718994, 1.0460104942321777, 0.32718074321746826, -1.2048325538635254, -0.5067874789237976, -1.5516130924224854, 0.06493845582008362, -1.2737187147140503, 2.0776171684265137, 0.5819768309593201, 0.6046930551528931, -0.42251503467559814, -2.254969835281372, -0.16210108995437622, -2.2563204765319824, -0.10075569152832031, 0.9177229404449463, 1.5762767791748047, 2.7419281005859375, 0.060010433197021484, 0.5716381072998047, 1.6441261768341064, 0.43309205770492554, -0.568610429763794, -0.2724883556365967, 0.6309924721717834, -0.3663438558578491, 1.075821876525879, -0.2899515628814697, -1.0338094234466553, -0.4365360736846924, -0.1767030507326126, -0.7933924794197083, -0.011822116561233997, 0.19747662544250488, 1.1407384872436523, 1.2273057699203491, -1.0227994918823242, -0.3343679904937744, 1.169621229171753, -0.0488663911819458, 1.483973741531372, -0.38077205419540405, 1.1205872297286987, 0.970018208026886, 1.3067058324813843, -1.6369099617004395, -1.3225324153900146, -0.11360657215118408, -0.5588780045509338, -0.6281343698501587, 1.1262048482894897, 0.6954004764556885, -0.7393412590026855, -1.9010684490203857, -0.09938856959342957, 0.2540907859802246, 0.27439916133880615, -0.2334914207458496, -0.40928491950035095, 1.1027946472167969, 1.2851917743682861, -0.06619797646999359, -0.7506799697875977, -1.0276689529418945, 1.8983180522918701, -1.4051213264465332, 0.7500110864639282, 1.5572856664657593, 1.7900652885437012, -0.07333007454872131, -0.30418816208839417, 0.16790008544921875, 1.6699206829071045, 1.787426471710205, -0.2871040999889374, 0.8006570339202881, 0.6510925889015198, -0.6824488043785095, 0.5444247722625732, 0.6616759300231934, 0.35165172815322876, 1.6019139289855957, -0.14813852310180664, 0.5130512714385986, -0.28182369470596313, 1.0845435857772827, -0.08362281322479248, -1.7921830415725708, -0.30637121200561523, 0.6029113531112671, 1.0452110767364502, -0.27736496925354004, 1.550170660018921, -0.34255704283714294, -1.430403232574463, -0.19048643112182617, -0.11520886421203613, 0.17386174201965332, -0.154413104057312, 2.1109619140625, 0.8018612265586853, -0.32689177989959717, -1.7319438457489014, 0.9059449434280396, 1.7907878160476685, 0.3729005455970764, -0.6568713784217834, -2.621551036834717, 1.562666654586792, 0.12875789403915405, 0.59803706407547, 0.6848199367523193, -0.46165308356285095, 1.1937299966812134, 0.35992860794067383, 2.4040963649749756, 0.2477051466703415, 0.23284897208213806, -0.6943515539169312, -0.06252801418304443, -1.9521839618682861, 1.5729068517684937, 1.6750965118408203, -0.5509987473487854, -1.210537314414978, 1.189182996749878, 0.5001479387283325, 0.6877278685569763, 1.3023184537887573, 0.9874952435493469, 0.1338038444519043, 1.995398998260498, 1.2251688241958618, 0.8958189487457275, -0.7625464200973511, -1.6247597932815552, -1.7507658004760742, 0.4298298954963684, -0.5380764603614807, 0.8301845788955688, -0.20045894384384155, -0.3859630525112152, 1.5970879793167114, 0.02157793939113617, -0.5892434120178223, 1.8399372100830078, 1.5476154088974, 0.03591954708099365, -1.5487334728240967, 1.6792347431182861, -0.36126524209976196, -0.2014431357383728, 0.8881400227546692, 1.1048557758331299, 1.4095587730407715, 0.05877752602100372, 1.6377744674682617, -0.5767369270324707, -0.7415128946304321, -1.3054401874542236, -0.10538256168365479, 1.3954843282699585, 1.1574127674102783, -0.309817910194397, 0.6086499094963074, -0.3916206955909729, -0.02361583709716797, -0.43337157368659973, 0.7449951171875, -0.5852572321891785, 1.0109148025512695, -0.7880926132202148, 0.8105524182319641, -0.6658601760864258, -0.5868251919746399, 0.1457686424255371, -0.5231689214706421, -0.6089823246002197, 0.7716224193572998, 1.1328415870666504, 1.3371400833129883, 1.0387492179870605, -1.5766518115997314, -1.2948576211929321, -0.14782333374023438, -0.4147334694862366, 0.7059663534164429, 1.6514248847961426, 0.3702719807624817, -1.1481972932815552, 1.5752261877059937, 0.7162822484970093, 1.1696524620056152, 2.1457273960113525, 0.11775827407836914, 0.05289340019226074, 1.1492743492126465, -1.122153639793396, -0.8825093507766724, 0.275368332862854, -0.770954966545105, -0.8884552717208862, 0.47295093536376953, 0.07902979850769043, -0.009379565715789795, -1.1499643325805664, 1.0467299222946167, 0.6547856330871582, 1.4769498109817505, 0.30515456199645996, -0.4709717035293579, 0.26766008138656616, 0.021121621131896973, 0.49605804681777954, 1.883418083190918, 1.3738601207733154, 0.5379928350448608, -1.5004281997680664, -0.3452913761138916, 1.2660750150680542, -1.2005819082260132, 2.033355236053467, 0.9049767255783081, 0.011127352714538574, -1.07155179977417, -1.3759996891021729, -0.9121044278144836, 0.33994460105895996, -0.05789443850517273, -1.5010240077972412, 2.30873441696167, 0.662830650806427, -0.5288584232330322, -0.6024024486541748, -0.5121921896934509, 0.1404017210006714, 1.155847191810608, 0.771844208240509, -0.17015182971954346, 0.8895694613456726, 1.4182803630828857, 1.6873124837875366, 1.0409494638442993, 2.2967796325683594, 1.4765031337738037, -0.5660513639450073, -1.712292194366455, -0.647835373878479, 2.894869089126587, -0.9907285571098328, 1.6656254529953003, 1.1970597505569458, -0.2417251318693161, 1.2619622945785522, 1.6555726528167725, -1.7351062297821045, -0.6687762141227722, -1.6003059148788452, -0.06485724449157715, 0.277765691280365, -0.6032552719116211, -0.7802845239639282, 1.1507551670074463, -1.3566656112670898, 1.1192033290863037, -0.7037187814712524, 0.9511206746101379, -1.185316801071167, 1.3231329917907715, 0.08460712432861328, 0.9029130339622498, -0.08420324325561523, 1.3493443727493286, 0.21087050437927246, 1.2508339881896973, 0.7195549607276917, 0.4978506565093994, -0.07472729682922363, -1.331351637840271, 1.3778449296951294, -0.4031795263290405, 1.5069835186004639, -0.5552680492401123, 2.2283339500427246, -0.09153270721435547, -0.11578848958015442, 0.3972654640674591, -0.05566571652889252, 0.9523553848266602, -0.43518754839897156, 0.5854031443595886, -1.6291948556900024, -1.3489701747894287, -0.005971074104309082, -1.5902512073516846, 0.38236576318740845, 0.28139728307724, 0.4394729733467102, -1.1329445838928223, 1.5512577295303345, 0.6461442708969116, 1.0987812280654907, -0.15457600355148315, -0.5882734060287476, 0.786141037940979, 0.7236696481704712, -0.3131796419620514, -0.4436752498149872, 0.6498457193374634, 1.0411981344223022, 1.3693166971206665, 1.0062838792800903, -0.27228713035583496, 2.315547466278076, -1.4452637434005737, 1.3011789321899414, -0.05870538949966431, -1.2342737913131714, 1.7795320749282837, 0.029665589332580566, -2.1107325553894043, 0.8656215667724609, -2.358029842376709, 0.7602927088737488, -0.6270744800567627, 1.738791584968567, 0.5101529359817505, 0.8107903003692627, -0.11373206973075867, -0.3802565336227417, 0.4051942825317383, 0.3089810013771057, -0.1363149881362915, 0.555884599685669, -0.4876413345336914, -1.3215625286102295, 0.13250267505645752, 1.3155779838562012, -0.3838213086128235, 0.4178462028503418, -0.370286226272583, 0.5057986974716187, 2.7993783950805664, 0.16849201917648315, -1.114149570465088, 1.4107861518859863, -0.0373988151550293, 0.46373438835144043, 1.9977054595947266, 0.21037912368774414, 0.7993109226226807, 0.6225295662879944, -2.1259474754333496, -0.1322290599346161, -0.5060024857521057, -1.4763263463974, -0.13768962025642395, 0.5392675995826721, -0.028522014617919922, 1.7608352899551392, -0.3202958405017853, 0.5985414981842041, -0.5761848092079163, -1.035080909729004, -0.27257978916168213, -0.5277632474899292, 1.4373923540115356, -0.1384587287902832, -1.6931747198104858, -1.5250184535980225, -3.118147611618042, -0.8594315052032471, -1.4362983703613281, 1.5710164308547974, -0.6699852347373962, -0.8360681533813477, 1.6008803844451904, -0.733701765537262, 0.9218835830688477, 2.7918217182159424, -0.016009032726287842, 0.30417299270629883, 0.28817787766456604, -2.062279224395752, -0.890381395816803, -0.26932448148727417, -0.6051068305969238, 0.8941603899002075, 1.6309545040130615, 1.225996971130371, 0.3198695480823517, -0.17937076091766357, -0.7589962482452393, -0.5115723609924316, 1.8514190912246704, 0.9696507453918457, -1.1380119323730469, 0.5551667213439941, 1.0908666849136353, 0.4441547393798828, -0.06531643867492676, 1.3391917943954468, 1.4338257312774658, 0.2765834331512451, 0.16489171981811523, 1.0928255319595337, 1.3516110181808472, -1.062493920326233, 2.002424955368042, 2.006742000579834, 0.708980917930603, 0.3782176971435547, -1.0206053256988525, 0.9358211755752563, -1.4840114116668701, 1.0830330848693848, 0.4938027262687683, -0.3096148371696472, 1.4250167608261108, 0.6786385178565979, 0.24411293864250183, 1.119895577430725, 0.8903541564941406, -0.24283218383789062, 1.5553629398345947, -1.331662654876709, -0.2801157832145691, 1.2362699508666992, 0.2091313600540161, 0.5170508027076721, -0.17022275924682617, -1.2086470127105713, 0.547623872756958, 0.11196941137313843, -0.3258708715438843, 0.9959275722503662, 0.6604105234146118, 1.923930287361145, -1.5939668416976929, 0.5858023166656494, 0.7285733819007874, -1.02972412109375, -1.2588825225830078, 1.5875389575958252, 0.47862792015075684, -0.5350438356399536, -0.7119984030723572, 0.5974469184875488, 0.21770930290222168, 0.8810975551605225, 0.14070037007331848, 1.9762797355651855, 1.309414029121399, 1.681742548942566, 1.1593401432037354, -1.6281169652938843, 0.12991684675216675, -0.15698957443237305, -0.05164194107055664, 0.07694369554519653, 0.2059500813484192};

int8_t* filter_tensor_data=filter_raw;
float* bias_tensor_data=bias_raw;

bool has_conv_bias=true;
int stride_width=1;
int stride_height=1;
TfLiteFusedActivation activation=kTfLiteActNone;
int dilation_width_factor=1;
int dilation_height_factor=1;
const int filter_dims_size=4;
const int filter_dims_raw[4]={1,5,5,1152};
const int bias_dims_size=1;
const int32_t bias_dims_raw[1]={1152};
TfLitePadding paddings=kTfLitePaddingSame;
TfLiteType filter_type=kTfLiteInt8;
TfLiteType bias_type=kTfLiteFloat32;
const float scale_filter=0.0;
const int32_t zero_point_filter=0;
const float scale_bias=0.0;
const int32_t zero_point_bias=0;

struct OpData {
  TfLitePaddingValues padding;
  // The scaling factor from input to output (aka the 'real multiplier') can
  // be represented as a fixed point multiplier plus a left shift.
  int32_t output_multiplier;
  int output_shift;
  // The range of the fused activation layer. For example for kNone and
  // uint8_t these would be 0 and 255.
  int32_t output_activation_min;
  int32_t output_activation_max;

  // Per channel output multiplier and shift.
  std::vector<int32_t> per_channel_output_multiplier;
  std::vector<int> per_channel_output_shift;

  // Hybrid per channel temporary tensors.
  int input_quantized_id = kTensorNotAllocated;
  int scaling_factors_id = kTensorNotAllocated;
  int input_offset_id = kTensorNotAllocated;
  int32_t input_quantized_index;
  int32_t scaling_factors_index;
  int32_t input_offset_index;
};

void ExtractDepthConvParams(TfLitePadding padding, int stride_width, int stride_height,
                               int dilation_width_factor, int dilation_height_factor,
                               TfLiteFusedActivation activation,
                               TfLiteDepthwiseConvParams* data_params) {
  // TfLiteDepthwiseConvParams data_params;
  data_params->padding = padding;
  data_params->stride_width = stride_width;
  data_params->stride_height = stride_height;
  data_params->dilation_width_factor = dilation_width_factor;
  data_params->dilation_height_factor = dilation_height_factor;
  data_params->activation = activation;
  // return data_params;
}

void GetDepthConvTensor(TfLiteType type, const char* name, TfLiteIntArray* tensor_dims_data, 
                       TfLiteQuantizationParams quant_params, char* tensor_data,
                       TfLiteAffineQuantization* quant_struct, size_t bytes_size,
                       TfLiteTensor* tensor) {
  tensor->type = type;
  tensor->name = name;
  tensor->dims = tensor_dims_data;
  tensor->params = quant_params;
  // tensor->data.raw = reinterpret_cast<char*>(tensor_data);
  tensor->data.raw = tensor_data;
  tensor->bytes = bytes_size;
  tensor->allocation_type = kTfLiteMemNone;
  // data_0.allocation = allocation;
  tensor->is_variable = false;
  if (type != kTfLiteFloat32) {
    tensor->quantization.type = kTfLiteAffineQuantization;
    tensor->quantization.params = quant_struct;
  } else {
    tensor->quantization.type = kTfLiteNoQuantization;
  }
  tensor->sparsity = nullptr;
}
void* Init(TfLiteContext* context, const char* buffer, size_t length) {
  // This is a builtin op, so we don't use the contents in 'buffer', if any.
  // Instead, we allocate a new object to carry information from Prepare() to
  // Eval().
  return new OpData;
}

void Free(TfLiteContext* context, void* buffer) {
  delete reinterpret_cast<OpData*>(buffer);
}

TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {
  // auto* params =
  //     reinterpret_cast<TfLiteDepthwiseConvParams*>(node->builtin_data);
  TfLiteDepthwiseConvParams data_params;
  ExtractDepthConvParams(paddings, stride_width, stride_height, dilation_width_factor, dilation_height_factor, activation, &data_params);
  TfLiteDepthwiseConvParams* params = &data_params;

  OpData* data = reinterpret_cast<OpData*>(node->user_data);

  bool has_bias = false;

  // TF_LITE_ENSURE(context, has_bias || NumInputs(node) == 2);
  const TfLiteTensor* input;
  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));
  TfLiteTensor filter_tensor;
  TfLiteIntArray* filter_dims_data = TfLiteIntArrayCreate(filter_dims_size);
  int size_filter = 1;
  for (int i = 0; i < filter_dims_size; i++) {
    // std::cout << "dims_raw: " << dims_raw[i] << std::endl;
    filter_dims_data->data[i] = filter_dims_raw[i];
    size_filter *= filter_dims_raw[i];
  }
  size_t bytes_size_filter = sizeof(float) * size_filter;
  TfLiteQuantizationParams filter_params;
  filter_params.scale=scale_filter;
  filter_params.zero_point=zero_point_filter;
  TfLiteFloatArray* scale_array_filter = TfLiteFloatArrayCreate(1);
  scale_array_filter->data[0] = scale_filter;
  TfLiteIntArray* zero_point_array_filter = TfLiteIntArrayCreate(1);
  zero_point_array_filter->data[0] = zero_point_filter;

  TfLiteAffineQuantization quant_struct_filter;
  quant_struct_filter.scale = scale_array_filter;
  quant_struct_filter.zero_point = zero_point_array_filter;
  quant_struct_filter.quantized_dimension = 0;
  // float* filter_data;
  // filter_tensor_data = filter_raw;
  GetDepthConvTensor(filter_type, "filter", filter_dims_data, filter_params,
                       reinterpret_cast<char*>(filter_tensor_data),
                       &quant_struct_filter, bytes_size_filter, &filter_tensor);
  const TfLiteTensor* filter = &filter_tensor;
  // TF_LITE_ENSURE_OK(context,
  //                   GetInputSafe(context, node, kFilterTensor, &filter));
  const TfLiteTensor* bias = nullptr;

  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
  TfLiteTensor* output;
  TF_LITE_ENSURE_OK(context,
                    GetOutputSafe(context, node, kOutputTensor, &output));

  TF_LITE_ENSURE_EQ(context, NumDimensions(input), 4);
  TF_LITE_ENSURE_EQ(context, NumDimensions(filter), 4);
  TF_LITE_ENSURE(context, params->dilation_height_factor > 0);
  TF_LITE_ENSURE(context, params->dilation_width_factor > 0);

  const TfLiteType data_type = input->type;

  const TfLiteType filter_type = filter->type;
  const bool is_hybrid =
      data_type == kTfLiteFloat32 && filter_type == kTfLiteInt8;
  TF_LITE_ENSURE(context,
                 data_type == kTfLiteFloat32 || data_type == kTfLiteUInt8 ||
                     data_type == kTfLiteInt8 || data_type == kTfLiteInt16);
  TF_LITE_ENSURE_TYPES_EQ(context, output->type, data_type);
  if (!is_hybrid) {
    TF_LITE_ENSURE(context,
                   filter->type == data_type || data_type == kTfLiteInt16);
  }

  if (data_type == kTfLiteInt16) {
    TF_LITE_ENSURE_EQ(context, input->params.zero_point, 0);
    TF_LITE_ENSURE_EQ(context, output->params.zero_point, 0);
  }

  // Filter in DepthwiseConv is expected to be [1, H, W, O].
  TF_LITE_ENSURE_EQ(context, SizeOfDimension(filter, 0), 1);

  if (has_bias) {
    TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kBiasTensor, &bias));
    if (data_type == kTfLiteUInt8 || data_type == kTfLiteInt8) {
      TF_LITE_ENSURE_TYPES_EQ(context, bias->type, kTfLiteInt32);
      TF_LITE_ENSURE_EQ(context, bias->params.zero_point, 0);
    } else if (data_type == kTfLiteInt16) {
      TF_LITE_ENSURE_TYPES_EQ(context, bias->type, kTfLiteInt64);
      TF_LITE_ENSURE_EQ(context, bias->params.zero_point, 0);
    } else {
      TF_LITE_ENSURE_TYPES_EQ(context, bias->type, data_type);
    }
    TF_LITE_ENSURE_EQ(context, NumDimensions(bias), 1);
    TF_LITE_ENSURE_EQ(context, SizeOfDimension(filter, 3),
                      SizeOfDimension(bias, 0));
  }

  int channels_out = SizeOfDimension(filter, 3);
  int width = SizeOfDimension(input, 2);
  int height = SizeOfDimension(input, 1);
  int filter_width = SizeOfDimension(filter, 2);
  int filter_height = SizeOfDimension(filter, 1);
  int batches = SizeOfDimension(input, 0);

  // Matching GetWindowedOutputSize in TensorFlow.
  auto padding = params->padding;
  int out_width, out_height;

  data->padding = ComputePaddingHeightWidth(
      params->stride_height, params->stride_width,
      params->dilation_height_factor, params->dilation_width_factor, height,
      width, filter_height, filter_width, padding, &out_height, &out_width);

  // Note that quantized inference requires that all tensors have their
  // parameters set. This is usually done during quantized training or
  // calibration.
  if (data_type != kTfLiteFloat32) {
    TF_LITE_ENSURE_EQ(context, filter->quantization.type,
                      kTfLiteAffineQuantization);
    TF_LITE_ENSURE(context, filter->quantization.type != kTfLiteNoQuantization);
    const auto* affine_quantization =
        reinterpret_cast<TfLiteAffineQuantization*>(
            filter->quantization.params);
    TF_LITE_ENSURE(context, affine_quantization);
    TF_LITE_ENSURE(context, affine_quantization->scale);
    TF_LITE_ENSURE(context, (affine_quantization->scale->size == 1 ||
                             affine_quantization->scale->size == channels_out));

    data->per_channel_output_multiplier.resize(channels_out);
    data->per_channel_output_shift.resize(channels_out);
    TF_LITE_ENSURE_STATUS(tflite::PopulateConvolutionQuantizationParams(
        context, input, filter, bias, output, params->activation,
        &data->output_multiplier, &data->output_shift,
        &data->output_activation_min, &data->output_activation_max,
        data->per_channel_output_multiplier.data(),
        data->per_channel_output_shift.data(), channels_out));
  }

  if (is_hybrid) {
    TF_LITE_ENSURE(context, filter->quantization.type != kTfLiteNoQuantization);
    const auto* affine_quantization =
        reinterpret_cast<TfLiteAffineQuantization*>(
            filter->quantization.params);
    TF_LITE_ENSURE(context, affine_quantization);
    TF_LITE_ENSURE(context, affine_quantization->scale);
    TF_LITE_ENSURE_EQ(
        context, affine_quantization->scale->size,
        filter->dims->data[affine_quantization->quantized_dimension]);

    int temporaries_count = 0;
    data->input_quantized_index = temporaries_count;
    if (data->input_quantized_id == kTensorNotAllocated) {
      TF_LITE_ENSURE_OK(
          context, context->AddTensors(context, 1, &data->input_quantized_id));
    }
    ++temporaries_count;
    data->scaling_factors_index = temporaries_count;
    if (data->scaling_factors_id == kTensorNotAllocated) {
      TF_LITE_ENSURE_OK(
          context, context->AddTensors(context, 1, &data->scaling_factors_id));
    }
    ++temporaries_count;
    data->input_offset_index = temporaries_count;
    if (data->input_offset_id == kTensorNotAllocated) {
      TF_LITE_ENSURE_OK(
          context, context->AddTensors(context, 1, &data->input_offset_id));
    }
    ++temporaries_count;

    TfLiteIntArrayFree(node->temporaries);
    node->temporaries = TfLiteIntArrayCreate(temporaries_count);

    node->temporaries->data[data->input_quantized_index] =
        data->input_quantized_id;
    TfLiteTensor* input_quantized;
    TF_LITE_ENSURE_OK(
        context, GetTemporarySafe(context, node, data->input_quantized_index,
                                  &input_quantized));
    input_quantized->type = kTfLiteInt8;
    input_quantized->allocation_type = kTfLiteArenaRw;
    if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {
      TfLiteIntArray* input_quantized_size = TfLiteIntArrayCopy(input->dims);
      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, input_quantized,
                                                       input_quantized_size));
    }
    node->temporaries->data[data->scaling_factors_index] =
        data->scaling_factors_id;
    TfLiteTensor* scaling_factors;
    TF_LITE_ENSURE_OK(
        context, GetTemporarySafe(context, node, data->scaling_factors_index,
                                  &scaling_factors));
    scaling_factors->type = kTfLiteFloat32;
    scaling_factors->allocation_type = kTfLiteArenaRw;
    const int batch_size = SizeOfDimension(input, 0);
    int scaling_dims[1] = {batch_size};
    if (!TfLiteIntArrayEqualsArray(scaling_factors->dims, 1, scaling_dims)) {
      TfLiteIntArray* scaling_factors_size = TfLiteIntArrayCreate(1);
      scaling_factors_size->data[0] = batch_size;
      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, scaling_factors,
                                                       scaling_factors_size));
    }
    node->temporaries->data[data->input_offset_index] = data->input_offset_id;
    TfLiteTensor* input_offsets;
    TF_LITE_ENSURE_OK(context,
                      GetTemporarySafe(context, node, data->input_offset_index,
                                       &input_offsets));
    input_offsets->type = kTfLiteInt32;
    input_offsets->allocation_type = kTfLiteArenaRw;
    if (!TfLiteIntArrayEqualsArray(input_offsets->dims, 1, scaling_dims)) {
      TfLiteIntArray* input_offsets_size = TfLiteIntArrayCreate(1);
      input_offsets_size->data[0] = batch_size;
      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, input_offsets,
                                                       input_offsets_size));
    }
  }

  TfLiteIntArray* outputSize = TfLiteIntArrayCreate(4);
  outputSize->data[0] = batches;
  outputSize->data[1] = out_height;
  outputSize->data[2] = out_width;
  outputSize->data[3] = channels_out;
  return context->ResizeTensor(context, output, outputSize);
}

TfLiteStatus ComputeDepthMultiplier(TfLiteContext* context,
                                    const TfLiteTensor* input,
                                    const TfLiteTensor* filter,
                                    int16* depth_multiplier) {
  int num_filter_channels = SizeOfDimension(filter, 3);
  int num_input_channels = SizeOfDimension(input, 3);
  TF_LITE_ENSURE(context, num_input_channels != 0);
  TF_LITE_ENSURE_EQ(context, num_filter_channels % num_input_channels, 0);
  *depth_multiplier = num_filter_channels / num_input_channels;
  return kTfLiteOk;
}

template <KernelType kernel_type>
TfLiteStatus EvalFloat(TfLiteContext* context, TfLiteNode* node,
                       TfLiteDepthwiseConvParams* params, OpData* data,
                       const TfLiteTensor* input, const TfLiteTensor* filter,
                       const TfLiteTensor* bias, TfLiteTensor* output) {
  float output_activation_min, output_activation_max;
  CalculateActivationRange(params->activation, &output_activation_min,
                           &output_activation_max);

  DepthwiseParams op_params;
  op_params.padding_type = PaddingType::kSame;
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.stride_width = params->stride_width;
  op_params.stride_height = params->stride_height;
  op_params.dilation_width_factor = params->dilation_width_factor;
  op_params.dilation_height_factor = params->dilation_height_factor;
  op_params.float_activation_min = output_activation_min;
  op_params.float_activation_max = output_activation_max;
  TF_LITE_ENSURE_STATUS(ComputeDepthMultiplier(context, input, filter,
                                               &op_params.depth_multiplier));
  if (kernel_type == kReference) {
    reference_ops::DepthwiseConv(
        op_params, GetTensorShape(input), GetTensorData<float>(input),
        GetTensorShape(filter), GetTensorData<float>(filter),
        GetTensorShape(bias), GetTensorData<float>(bias),
        GetTensorShape(output), GetTensorData<float>(output));
  } else {
    optimized_ops::DepthwiseConv<float, float>(
        op_params, GetTensorShape(input), GetTensorData<float>(input),
        GetTensorShape(filter), GetTensorData<float>(filter),
        GetTensorShape(bias), GetTensorData<float>(bias),
        GetTensorShape(output), GetTensorData<float>(output),
        CpuBackendContext::GetFromContext(context));
  }
  return kTfLiteOk;
}

template <KernelType kernel_type>
TfLiteStatus EvalQuantized(TfLiteContext* context, TfLiteNode* node,
                           TfLiteDepthwiseConvParams* params, OpData* data,
                           const TfLiteTensor* input,
                           const TfLiteTensor* filter, const TfLiteTensor* bias,
                           TfLiteTensor* output) {
  auto input_offset = -input->params.zero_point;
  auto filter_offset = -filter->params.zero_point;
  auto output_offset = output->params.zero_point;

  DepthwiseParams op_params;
  op_params.padding_type = PaddingType::kSame;
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.stride_width = params->stride_width;
  op_params.stride_height = params->stride_height;
  op_params.dilation_width_factor = params->dilation_width_factor;
  op_params.dilation_height_factor = params->dilation_height_factor;
  op_params.input_offset = input_offset;
  op_params.weights_offset = filter_offset;
  op_params.output_offset = output_offset;
  op_params.output_multiplier = data->output_multiplier;
  op_params.output_shift = -data->output_shift;
  op_params.quantized_activation_min = data->output_activation_min;
  op_params.quantized_activation_max = data->output_activation_max;
  TF_LITE_ENSURE_STATUS(ComputeDepthMultiplier(context, input, filter,
                                               &op_params.depth_multiplier));
  if (kernel_type == kReference) {
    reference_ops::DepthwiseConv(
        op_params, GetTensorShape(input), GetTensorData<uint8_t>(input),
        GetTensorShape(filter), GetTensorData<uint8_t>(filter),
        GetTensorShape(bias), GetTensorData<int32_t>(bias),
        GetTensorShape(output), GetTensorData<uint8_t>(output));
  } else {
    optimized_ops::DepthwiseConv<uint8, int32>(
        op_params, GetTensorShape(input), GetTensorData<uint8_t>(input),
        GetTensorShape(filter), GetTensorData<uint8_t>(filter),
        GetTensorShape(bias), GetTensorData<int32_t>(bias),
        GetTensorShape(output), GetTensorData<uint8_t>(output),
        CpuBackendContext::GetFromContext(context));
  }
  return kTfLiteOk;
}

template <KernelType kernel_type>
TfLiteStatus EvalQuantizedPerChannel(TfLiteContext* context, TfLiteNode* node,
                                     TfLiteDepthwiseConvParams* params,
                                     OpData* data, const TfLiteTensor* input,
                                     const TfLiteTensor* filter,
                                     const TfLiteTensor* bias,
                                     TfLiteTensor* output) {
  DepthwiseParams op_params;
  op_params.padding_type = PaddingType::kSame;
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.stride_width = params->stride_width;
  op_params.stride_height = params->stride_height;
  op_params.dilation_width_factor = params->dilation_width_factor;
  op_params.dilation_height_factor = params->dilation_height_factor;
  op_params.input_offset = -input->params.zero_point;
  op_params.weights_offset = 0;
  op_params.output_offset = output->params.zero_point;
  op_params.quantized_activation_min = data->output_activation_min;
  op_params.quantized_activation_max = data->output_activation_max;
  TF_LITE_ENSURE_STATUS(ComputeDepthMultiplier(context, input, filter,
                                               &op_params.depth_multiplier));

  if (kernel_type == kReference) {
    reference_integer_ops::DepthwiseConvPerChannel(
        op_params, data->per_channel_output_multiplier.data(),
        data->per_channel_output_shift.data(), GetTensorShape(input),
        GetTensorData<int8>(input), GetTensorShape(filter),
        GetTensorData<int8>(filter), GetTensorShape(bias),
        GetTensorData<int32>(bias), GetTensorShape(output),
        GetTensorData<int8>(output));
  } else {
    optimized_integer_ops::DepthwiseConvPerChannel(
        op_params, data->per_channel_output_multiplier.data(),
        data->per_channel_output_shift.data(), GetTensorShape(input),
        GetTensorData<int8>(input), GetTensorShape(filter),
        GetTensorData<int8>(filter), GetTensorShape(bias),
        GetTensorData<int32>(bias), GetTensorShape(output),
        GetTensorData<int8>(output),
        CpuBackendContext::GetFromContext(context));
  }
  return kTfLiteOk;
}

TfLiteStatus EvalQuantizedPerChannel16x8(
    const TfLiteDepthwiseConvParams* params, const OpData* data,
    const TfLiteTensor* input, const TfLiteTensor* filter,
    const TfLiteTensor* bias, TfLiteTensor* output) {
  DepthwiseParams op_params;
  op_params.padding_type = PaddingType::kSame;
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.stride_width = params->stride_width;
  op_params.stride_height = params->stride_height;
  op_params.dilation_width_factor = params->dilation_width_factor;
  op_params.dilation_height_factor = params->dilation_height_factor;
  op_params.depth_multiplier = params->depth_multiplier;
  op_params.weights_offset = 0;
  op_params.quantized_activation_min = data->output_activation_min;
  op_params.quantized_activation_max = data->output_activation_max;

  reference_integer_ops::DepthwiseConvPerChannel(
      op_params, data->per_channel_output_multiplier.data(),
      data->per_channel_output_shift.data(), GetTensorShape(input),
      GetTensorData<int16>(input), GetTensorShape(filter),
      GetTensorData<int8>(filter), GetTensorShape(bias),
      GetTensorData<std::int64_t>(bias), GetTensorShape(output),
      GetTensorData<int16>(output));

  return kTfLiteOk;
}

template <KernelType kernel_type>
TfLiteStatus EvalHybridPerChannel(TfLiteContext* context, TfLiteNode* node,
                                  TfLiteDepthwiseConvParams* params,
                                  OpData* data, const TfLiteTensor* input,
                                  const TfLiteTensor* filter,
                                  const TfLiteTensor* bias,
                                  TfLiteTensor* output) {
  float output_activation_min, output_activation_max;
  CalculateActivationRange(params->activation, &output_activation_min,
                           &output_activation_max);
  const int batch_size = SizeOfDimension(input, 0);
  TF_LITE_ENSURE(context, batch_size != 0);
  const int input_size = NumElements(input) / batch_size;
  TfLiteTensor* input_quantized;
  TF_LITE_ENSURE_OK(context,
                    GetTemporarySafe(context, node, data->input_quantized_index,
                                     &input_quantized));
  int8_t* quantized_input_ptr_batch = input_quantized->data.int8;
  TfLiteTensor* scaling_factors_tensor;
  TF_LITE_ENSURE_OK(context,
                    GetTemporarySafe(context, node, data->scaling_factors_index,
                                     &scaling_factors_tensor));
  float* scaling_factors_ptr = GetTensorData<float>(scaling_factors_tensor);
  TfLiteTensor* input_offset_tensor;
  TF_LITE_ENSURE_OK(context,
                    GetTemporarySafe(context, node, data->input_offset_index,
                                     &input_offset_tensor));
  int32_t* input_offset_ptr = GetTensorData<int32_t>(input_offset_tensor);

  for (int b = 0; b < batch_size; ++b) {
    const int offset = b * input_size;
    tensor_utils::AsymmetricQuantizeFloats(
        GetTensorData<float>(input) + offset, input_size,
        quantized_input_ptr_batch + offset, &scaling_factors_ptr[b],
        &input_offset_ptr[b]);
  }

  DepthwiseParams op_params;
  op_params.padding_type = PaddingType::kSame;
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.stride_width = params->stride_width;
  op_params.stride_height = params->stride_height;
  op_params.dilation_width_factor = params->dilation_width_factor;
  op_params.dilation_height_factor = params->dilation_height_factor;
  op_params.depth_multiplier = params->depth_multiplier;

  op_params.weights_offset = 0;
  op_params.float_activation_min = output_activation_min;
  op_params.float_activation_max = output_activation_max;
  TF_LITE_ENSURE(context, filter->quantization.type != kTfLiteNoQuantization);
  const auto* affine_quantization =
      reinterpret_cast<TfLiteAffineQuantization*>(filter->quantization.params);
  if (kernel_type == kReference) {
    reference_integer_ops::DepthwiseConvHybridPerChannel(
        op_params, scaling_factors_ptr, GetTensorShape(input),
        quantized_input_ptr_batch, GetTensorShape(filter),
        GetTensorData<int8>(filter), GetTensorShape(bias),
        GetTensorData<float>(bias), GetTensorShape(output),
        GetTensorData<float>(output), affine_quantization->scale->data,
        input_offset_ptr);
  } else {
    optimized_integer_ops::DepthwiseConvHybridPerChannel(
        op_params, scaling_factors_ptr, GetTensorShape(input),
        quantized_input_ptr_batch, GetTensorShape(filter),
        GetTensorData<int8>(filter), GetTensorShape(bias),
        GetTensorData<float>(bias), GetTensorShape(output),
        GetTensorData<float>(output), affine_quantization->scale->data,
        input_offset_ptr, CpuBackendContext::GetFromContext(context));
  }

  return kTfLiteOk;
}

template <KernelType kernel_type, TfLiteType input_type>
TfLiteStatus EvalImpl(TfLiteContext* context, TfLiteNode* node) {
  // auto* params =
  //     reinterpret_cast<TfLiteDepthwiseConvParams*>(node->builtin_data);
  TfLiteDepthwiseConvParams data_params;
  ExtractDepthConvParams(paddings, stride_width, stride_height, dilation_width_factor, dilation_height_factor, activation, &data_params);
  TfLiteDepthwiseConvParams* params = &data_params;

  OpData* data = reinterpret_cast<OpData*>(node->user_data);

  TfLiteTensor* output;
  TF_LITE_ENSURE_OK(context,
                    GetOutputSafe(context, node, kOutputTensor, &output));
  const TfLiteTensor* input;
  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));
  // const TfLiteTensor* filter;
  // TF_LITE_ENSURE_OK(context,
  //                   GetInputSafe(context, node, kFilterTensor, &filter));
  TfLiteTensor filter_tensor;
  TfLiteIntArray* filter_dims_data = TfLiteIntArrayCreate(filter_dims_size);
  int size_filter = 1;
  for (int i = 0; i < filter_dims_size; i++) {
    // std::cout << "dims_raw: " << dims_raw[i] << std::endl;
    filter_dims_data->data[i] = filter_dims_raw[i];
    size_filter *= filter_dims_raw[i];
  }
  size_t bytes_size_filter = sizeof(float) * size_filter;
  TfLiteQuantizationParams filter_params;
  filter_params.scale=scale_filter;
  filter_params.zero_point=zero_point_filter;

  TfLiteFloatArray* scale_array_filter = TfLiteFloatArrayCreate(1);
  scale_array_filter->data[0] = scale_filter;
  TfLiteIntArray* zero_point_array_filter = TfLiteIntArrayCreate(1);
  zero_point_array_filter->data[0] = zero_point_filter;

  TfLiteAffineQuantization quant_struct_filter;
  quant_struct_filter.scale = scale_array_filter;
  quant_struct_filter.zero_point = zero_point_array_filter;
  quant_struct_filter.quantized_dimension = 0;
  // float* filter_data;
  // filter_tensor_data = filter_raw;
  GetDepthConvTensor(filter_type, "filter", filter_dims_data, filter_params,
                       reinterpret_cast<char*>(filter_tensor_data),
                       &quant_struct_filter, bytes_size_filter, &filter_tensor);
  const TfLiteTensor* filter = &filter_tensor;
  // const TfLiteTensor* bias =
  //     (NumInputs(node) == 3) ? GetInput(context, node, kBiasTensor) : nullptr;
  TfLiteTensor bias_tensor;
  const TfLiteTensor* bias;
  if (has_conv_bias) {
    TfLiteIntArray* bias_dims_data = TfLiteIntArrayCreate(bias_dims_size);
    int size_bias = 1;
    for (int i = 0; i < bias_dims_size; i++) {
      // std::cout << "dims_raw: " << dims_raw[i] << std::endl;
      bias_dims_data->data[i] = bias_dims_raw[i];
      size_bias *= bias_dims_raw[i];
    }
    size_t bytes_size_bias = sizeof(float) * size_bias;
    TfLiteQuantizationParams bias_params;
    bias_params.scale=scale_bias;
    bias_params.zero_point=zero_point_bias;

    TfLiteFloatArray* scale_array_bias = TfLiteFloatArrayCreate(1);
    scale_array_bias->data[0] = scale_bias;
    TfLiteIntArray* zero_point_array_bias = TfLiteIntArrayCreate(1);
    zero_point_array_bias->data[0] = zero_point_bias;

    TfLiteAffineQuantization quant_struct_bias;
    quant_struct_bias.scale = scale_array_bias;
    quant_struct_bias.zero_point = zero_point_array_bias;
    quant_struct_bias.quantized_dimension = 0;
    
    // float* bias_data;
    // bias_tensor_data = bias_raw;
    GetDepthConvTensor(bias_type, "bias", bias_dims_data, bias_params,
                        reinterpret_cast<char*>(bias_tensor_data), 
                        &quant_struct_bias, bytes_size_bias, &bias_tensor);
    bias = &bias_tensor;
  } else {
    bias = nullptr;
  }

  TFLITE_DCHECK_EQ(input_type, input->type);

  switch (input_type) {  // Already know in/out types are same.
    case kTfLiteFloat32:
      if (filter->type == kTfLiteFloat32) {
        return EvalFloat<kernel_type>(context, node, params, data, input,
                                      filter, bias, output);
      } else if (filter->type == kTfLiteInt8) {
        return EvalHybridPerChannel<kernel_type>(context, node, params, data,
                                                 input, filter, bias, output);
      } else {
        TF_LITE_KERNEL_LOG(
            context, "Type %s with filter type %s not currently supported.",
            TfLiteTypeGetName(input->type), TfLiteTypeGetName(filter->type));
        return kTfLiteError;
      }
      break;
    case kTfLiteUInt8:
      return EvalQuantized<kernel_type>(context, node, params, data, input,
                                        filter, bias, output);
      break;
    case kTfLiteInt8:
      return EvalQuantizedPerChannel<kernel_type>(context, node, params, data,
                                                  input, filter, bias, output);
      break;
    case kTfLiteInt16:
      return EvalQuantizedPerChannel16x8(params, data, input, filter, bias,
                                         output);
      break;
    default:
      context->ReportError(context, "Type %d not currently supported.",
                           input->type);
      return kTfLiteError;
  }
}

template <KernelType kernel_type>
TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {
  const TfLiteTensor* input;
  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));

  switch (input->type) {  // Already know in/out types are same.
    case kTfLiteFloat32:
      return EvalImpl<kernel_type, kTfLiteFloat32>(context, node);
    case kTfLiteUInt8:
      return EvalImpl<kernel_type, kTfLiteUInt8>(context, node);
    case kTfLiteInt8:
      return EvalImpl<kernel_type, kTfLiteInt8>(context, node);
    case kTfLiteInt16:
      return EvalImpl<kernel_type, kTfLiteInt16>(context, node);
    default:
      context->ReportError(context, "Type %d not currently supported.",
                           input->type);
      return kTfLiteError;
  }
}

}  // namespace tsycdg

TfLiteRegistration* Register_tsycdg_REF() {
  static TfLiteRegistration r = {
      tsycdg::Init, tsycdg::Free, tsycdg::Prepare,
      tsycdg::Eval<tsycdg::kReference>};
  return &r;
}

TfLiteRegistration* Register_tsycdg_GENERIC_OPT() {
  static TfLiteRegistration r = {
      tsycdg::Init, tsycdg::Free, tsycdg::Prepare,
      tsycdg::Eval<tsycdg::kGenericOptimized>};
  return &r;
}

TfLiteRegistration* Register_tsycdg_NEON_OPT() {
  static TfLiteRegistration r = {
      tsycdg::Init, tsycdg::Free, tsycdg::Prepare,
      tsycdg::Eval<tsycdg::kNeonOptimized>};
  return &r;
}

TfLiteRegistration* Register_tsycdg_NEON_OPT_UINT8() {
  static TfLiteRegistration r = {
      tsycdg::Init, tsycdg::Free, tsycdg::Prepare,
      tsycdg::EvalImpl<tsycdg::kNeonOptimized, kTfLiteUInt8>};
  return &r;
}

TfLiteRegistration* Register_tsycdg() {
#ifdef USE_NEON
  return Register_tsycdg_NEON_OPT();
#else
  return Register_tsycdg_GENERIC_OPT();
#endif
}

// Warning: Clients using this variant are responsible for ensuring that their
// models only need the UINT8 type. TFLite's op registration mechanism doesn't
// yet allow for more nuanced registration mechanisms.
TfLiteRegistration* Register_tsycdg_UINT8() {
#ifdef USE_NEON
  return Register_tsycdg_NEON_OPT_UINT8();
#else
  return Register_tsycdg();
#endif
}

}  // namespace builtin
}  // namespace ops
}  // namespace tflite
