/* Copyright 2017 The TensorFlow Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

#include "tensorflow/lite/kernels/internal/optimized/integer_ops/depthwise_conv.h"

#include <stddef.h>
#include <stdint.h>
#include <vector>

#include "tensorflow/lite/c/builtin_op_data.h"
#include "tensorflow/lite/c/common.h"
#include "tensorflow/lite/kernels/cpu_backend_context.h"
#include "tensorflow/lite/kernels/internal/compatibility.h"
#include "tensorflow/lite/kernels/internal/optimized/cpu_check.h"
#include "tensorflow/lite/kernels/internal/optimized/depthwiseconv_multithread.h"
#include "tensorflow/lite/kernels/internal/optimized/integer_ops/depthwise_conv_hybrid.h"
#include "tensorflow/lite/kernels/internal/optimized/neon_check.h"
#include "tensorflow/lite/kernels/internal/quantization_util.h"
#include "tensorflow/lite/kernels/internal/reference/depthwiseconv_float.h"
#include "tensorflow/lite/kernels/internal/reference/depthwiseconv_uint8.h"
#include "tensorflow/lite/kernels/internal/reference/integer_ops/depthwise_conv.h"
#include "tensorflow/lite/kernels/internal/tensor.h"
#include "tensorflow/lite/kernels/internal/tensor_ctypes.h"
#include "tensorflow/lite/kernels/internal/tensor_utils.h"
#include "tensorflow/lite/kernels/internal/types.h"
#include "tensorflow/lite/kernels/kernel_util.h"
#include "tensorflow/lite/kernels/padding.h"

namespace tflite {
namespace ops {
namespace custom {
namespace cxtjry {

constexpr int kInputTensor = 0;
constexpr int kFilterTensor = 1;
constexpr int kBiasTensor = 2;
constexpr int kOutputTensor = 0;

// This file has three implementation of DepthwiseConv.
enum KernelType {
  kReference,
  kGenericOptimized,  // Neon-free
  kNeonOptimized,
};

const int kTensorNotAllocated = -1;

int8_t filter_r   aw[28800]={};

float bias_raw[1152]={-1.4683218002319336, 0.15765702724456787, 0.6538669466972351, -1.4128596782684326, -0.6797974109649658, 1.613243818283081, -1.3483142852783203, 0.6024150252342224, -0.2571677267551422, 0.2139822244644165, -0.1581713855266571, 1.933711051940918, -1.0128568410873413, -1.0112971067428589, -0.6434105634689331, -2.2113053798675537, -0.9016103744506836, 0.16696739196777344, 0.3251054883003235, 0.02430117130279541, -1.3030061721801758, -0.8943045139312744, -0.6171820163726807, -0.4742446541786194, 2.452861785888672, -0.21405646204948425, 0.8734530210494995, -3.1346046924591064, -0.9035225510597229, -1.1723430156707764, 0.19861871004104614, 1.7857680320739746, -1.5764960050582886, 2.217782735824585, -0.31798332929611206, -0.19818195700645447, -0.9856682419776917, -1.6671814918518066, -1.0990023612976074, -0.8548955321311951, -0.050304800271987915, -1.5887808799743652, -0.5237767100334167, 0.6095755696296692, 1.491836667060852, -0.10978490114212036, 0.8702313899993896, 1.4663782119750977, -0.5928421020507812, -0.7414597272872925, 1.4313875436782837, -0.6190763711929321, -0.9705217480659485, -0.6506712436676025, -0.4065132737159729, -1.412102222442627, -0.3048204481601715, -1.1474831104278564, -2.4570233821868896, -0.9533628225326538, 0.94195556640625, 0.5810531377792358, 0.15875041484832764, -0.3552485406398773, -1.1641802787780762, -1.2483417987823486, -1.3819911479949951, 1.3236048221588135, -0.6926138997077942, -1.496025800704956, 1.4160419702529907, -1.331391453742981, -1.1144174337387085, -1.362632155418396, 0.553825855255127, -0.2362939417362213, 0.8223026990890503, 1.2335388660430908, -1.2456464767456055, 0.6397016644477844, -0.5195313096046448, -0.7285902500152588, 2.148820400238037, -0.95567786693573, -0.33113861083984375, -2.190519332885742, -0.5615946054458618, 0.21084052324295044, -1.1811933517456055, 1.2597534656524658, 0.031607866287231445, -0.125696063041687, 0.5372867584228516, -0.24611562490463257, 0.01481539011001587, 0.3546607494354248, 0.34522294998168945, 4.247356414794922, -1.1928784847259521, 0.7247217297554016, -0.9070921540260315, -1.5663446187973022, -0.7142205834388733, -1.3868464231491089, -0.26541024446487427, -2.640151262283325, 1.4496840238571167, -0.07304933667182922, 0.02442014217376709, 1.018070101737976, -0.9225335121154785, -1.4224696159362793, -0.9803341627120972, 1.3247325420379639, 1.3628742694854736, -1.3224414587020874, -1.352676272392273, -0.23903828859329224, 0.22644764184951782, -1.1728904247283936, 1.1793937683105469, -0.6069941520690918, 1.8860801458358765, -1.7201080322265625, 1.576873779296875, -0.18643486499786377, -0.3906886875629425, -1.0428709983825684, 1.5188318490982056, 0.5226994156837463, 0.29558587074279785, 2.3013036251068115, -0.2704441547393799, -1.6732017993927002, -1.2575844526290894, 0.08252978324890137, 2.946103572845459, 0.2103337049484253, -1.7057875394821167, -0.7325684428215027, 0.2217954397201538, 0.020128149539232254, -0.4745826721191406, -0.7790237665176392, 0.06443101167678833, -0.3160249590873718, 0.5843865275382996, -0.9451507329940796, 0.5888162851333618, 0.07610444724559784, 1.0460158586502075, -0.006695747375488281, 1.2752408981323242, 0.24468517303466797, -0.3181072771549225, -0.8724790811538696, 1.3328524827957153, -1.1633102893829346, 1.3075833320617676, -0.2740333080291748, -0.43045157194137573, 1.0050957202911377, -1.5425302982330322, -0.29020190238952637, 1.0681158304214478, -1.383857011795044, 0.5269536375999451, -0.7464781403541565, 0.39856046438217163, 1.545224905014038, 0.897399365901947, -0.6284357309341431, -1.4136322736740112, -0.6665388345718384, -0.1384584903717041, -0.46964991092681885, -2.43353009223938, -0.25753313302993774, -1.1329326629638672, 0.7308672666549683, -1.393092155456543, 1.2944083213806152, 1.8640892505645752, 0.3853488266468048, -0.5619044899940491, -0.149053156375885, -0.14037087559700012, -0.7580698728561401, 0.3717445135116577, -1.5763428211212158, 1.9934717416763306, 0.6440842151641846, 0.7382870316505432, 2.259094715118408, -0.6128283739089966, -0.5834887623786926, -0.44400760531425476, 1.3663051128387451, 0.1930086314678192, -0.7385373115539551, 0.16017135977745056, -0.5834938883781433, 0.4764094352722168, -1.88438081741333, 0.6522079706192017, -0.9650428295135498, -0.45857465267181396, -1.347430944442749, 1.2037646770477295, 0.4371463656425476, -1.274406909942627, -0.45186394453048706, -1.6957160234451294, -0.5786399245262146, -0.43121200799942017, 0.5562828779220581, 0.5768582820892334, -0.23190435767173767, -0.5719162225723267, 0.15435799956321716, -0.34739625453948975, -0.7199530601501465, -0.9533153772354126, 0.4819028377532959, -1.3910847902297974, 0.29255616664886475, 1.0411312580108643, 0.3140467405319214, 1.428138017654419, -1.2891263961791992, 0.5952467918395996, 0.41727203130722046, -0.018455594778060913, -0.27255481481552124, 0.3731991648674011, -1.1384209394454956, -3.4217324256896973, 0.7621902227401733, 0.9325382709503174, -0.3248336911201477, -1.5287052392959595, -1.4997882843017578, -0.12006771564483643, 0.8104186058044434, -1.4721335172653198, -0.07306134700775146, -0.5297263860702515, 0.07803863286972046, -1.0245821475982666, 0.24556051194667816, -0.9935379028320312, -1.5655180215835571, 1.4469906091690063, -1.7855591773986816, -0.2713209390640259, 0.10429847240447998, 1.5501010417938232, -0.03823131322860718, -0.13069939613342285, -0.5970849394798279, -0.2273266613483429, 0.5427647233009338, 0.1777580976486206, 0.9447433948516846, 1.8804497718811035, 0.32545167207717896, 0.4248979091644287, -0.8358171582221985, 2.16530179977417, -1.4149757623672485, -0.029353588819503784, -0.08622930943965912, 0.541144609451294, -0.4605570137500763, -0.6089922189712524, -0.25040337443351746, -0.11507058143615723, -0.5794426202774048, -1.4218120574951172, -0.6139495372772217, 0.47131696343421936, 0.21568328142166138, -0.16529299318790436, 2.303999900817871, -0.3448932468891144, -0.21092572808265686, -2.4501543045043945, 0.1875678449869156, -0.7386457920074463, -0.677096426486969, 0.563819169998169, 2.146195411682129, 0.11237353086471558, 0.43500736355781555, -0.3125326931476593, 1.544203519821167, -1.232905626296997, -0.23433434963226318, -0.33234453201293945, 0.7502576112747192, 0.7374328374862671, 0.2660549283027649, -1.3087542057037354, -0.5092965364456177, 0.2871382236480713, 1.2404385805130005, -1.5333677530288696, 0.7751693725585938, -1.6759307384490967, -1.1011126041412354, -0.4038705825805664, -1.3177729845046997, 0.24117839336395264, 1.2677959203720093, 0.8418904542922974, 0.30182045698165894, 0.29673561453819275, 2.8835530281066895, -0.2036956548690796, -0.1774357259273529, 1.249542474746704, -0.38829442858695984, 1.2588322162628174, -0.5353109836578369, 0.867947518825531, 0.3634986877441406, -0.45008450746536255, 0.9405868053436279, -1.2180417776107788, 0.18189549446105957, -0.827941358089447, 1.6302151679992676, 0.3517938554286957, 1.5938889980316162, 0.9951233863830566, -1.5953044891357422, -2.6099891662597656, -1.0494489669799805, -1.1867424249649048, 0.8673832416534424, -0.3734678030014038, -0.18900960683822632, 1.9592056274414062, -2.0691120624542236, 0.9165130853652954, 0.6742305755615234, -1.6908068656921387, -0.37989282608032227, -1.3024532794952393, -0.8147131204605103, -0.6137071251869202, -0.26757556200027466, -1.210388422012329, 0.5358489155769348, -1.0571902990341187, 0.9776675701141357, -0.38067859411239624, 1.4964367151260376, 1.4769874811172485, 0.08856010437011719, -0.062219321727752686, 1.7505555152893066, 0.9364259243011475, 1.3057548999786377, 0.7484118938446045, -0.3235147297382355, 0.07069306075572968, -0.16791832447052002, 0.4751816987991333, -2.466888904571533, -1.1980235576629639, -1.2664402723312378, -0.7555254101753235, -0.14792096614837646, 1.6732556819915771, 2.818483591079712, -1.2659010887145996, -0.4050978422164917, 0.009910821914672852, -1.0979766845703125, 4.516752243041992, 1.0738601684570312, 1.808806300163269, -1.4646704196929932, -0.31687670946121216, -1.078107237815857, -1.6865489482879639, -1.4076789617538452, 1.5813907384872437, 0.17811506986618042, -0.4410496950149536, -0.3943149447441101, 1.2356641292572021, -1.52653169631958, 2.017000675201416, 2.4288086891174316, -0.4452584981918335, 2.0699477195739746, -0.4193111062049866, 0.016555309295654297, 0.3613099455833435, -0.8161138296127319, -0.78347247838974, 0.7799085378646851, -0.9045411944389343, 0.8016907572746277, -1.0619524717330933, 1.2357300519943237, -0.5367519855499268, -0.5015610456466675, 1.6149040460586548, -0.03547847270965576, -0.9055964946746826, -0.06455069780349731, -0.041732192039489746, 0.1021803617477417, 1.1490199565887451, 0.565656304359436, 0.38409435749053955, 1.343640685081482, 1.120162010192871, -0.5604895353317261, -0.06617340445518494, 0.8755781650543213, -1.4705493450164795, -1.5617588758468628, -0.8827152848243713, -2.9736390113830566, -0.5499828457832336, -1.0289915800094604, 0.6914863586425781, 0.5957832932472229, -1.7659854888916016, -2.6337993144989014, -1.3918499946594238, -0.6847572326660156, -0.31385383009910583, 0.42298245429992676, -0.12440872192382812, 0.6832424998283386, -0.04129602015018463, 0.4367302656173706, -0.8152685761451721, 1.6388952732086182, 1.3785161972045898, -1.4163086414337158, -1.0159292221069336, 0.4985311031341553, -0.2329568862915039, 1.2853825092315674, -1.6280863285064697, 1.1720913648605347, -0.6276648044586182, -0.16907966136932373, 1.1530110836029053, 0.7879483699798584, 0.44432157278060913, -0.7309898734092712, -0.5117884874343872, 0.052913665771484375, -0.5225597023963928, -0.1686544269323349, -0.5974962115287781, -1.131311297416687, -0.475416362285614, -0.4039205312728882, -1.384582281112671, -0.47151243686676025, -0.31984269618988037, -1.6353933811187744, 1.6999802589416504, 0.8247992992401123, -1.52396821975708, -0.8468711376190186, -1.0027869939804077, 3.5759387016296387, -0.33422839641571045, 1.023065209388733, 1.8874720335006714, -0.44738566875457764, -0.24325263500213623, 0.6710725426673889, -1.4956194162368774, -0.6310086846351624, 1.1128346920013428, -0.09662705659866333, 0.06691288948059082, -0.6243356466293335, -2.4676506519317627, -1.2220299243927002, -0.6564992666244507, -0.5163235068321228, 0.09695971012115479, -0.3227764070034027, -1.3571211099624634, 0.07674926519393921, 0.3624868392944336, 1.0754916667938232, 0.2139143943786621, 0.39018285274505615, 0.10267634689807892, 0.5150945782661438, 0.4040571451187134, 1.5102739334106445, -0.7416999340057373, -0.21406793594360352, 1.368760108947754, 0.30273962020874023, 1.3178715705871582, -0.7986593246459961, -1.431450605392456, 1.2326207160949707, -1.0803929567337036, -0.5647496581077576, -1.3756362199783325, -1.7399423122406006, 1.7498952150344849, -0.7698178291320801, -0.3487226366996765, -0.7836453914642334, 0.5521520972251892, 0.8098348379135132, 1.9198402166366577, -1.3283196687698364, 0.5221934914588928, 0.9358769655227661, 1.428645372390747, 0.08481466770172119, -0.1835094690322876, -0.2711724638938904, 0.8339545726776123, 2.061030864715576, -0.46680164337158203, 0.624210000038147, -0.4821551442146301, -1.4235150814056396, 1.2798930406570435, -0.7398505210876465, -0.7664029002189636, -0.2515577971935272, 0.10656961798667908, 2.3415422439575195, 1.369028925895691, -0.36024314165115356, -0.8240923881530762, -3.3530402183532715, 1.0653586387634277, -1.4438979625701904, 0.08352813124656677, -0.4444235563278198, 1.2102484703063965, 0.814217209815979, 4.750091075897217, 0.3434438407421112, -0.040183961391448975, 0.7415843605995178, 0.989440381526947, -0.3039970397949219, -1.2631982564926147, 0.745819091796875, -0.06925475597381592, -0.31268981099128723, 1.1082133054733276, 0.9908661842346191, -0.03326135873794556, -2.3301584720611572, 0.07231903076171875, -1.0165883302688599, 1.132882833480835, -1.4873671531677246, -1.3300138711929321, -1.7165906429290771, 1.5775483846664429, -1.2524389028549194, -0.17032796144485474, 0.431840717792511, -0.624619722366333, 0.10051426291465759, -0.024566948413848877, 1.1015130281448364, -1.0944222211837769, 0.8074215650558472, 0.2749205231666565, -2.621948480606079, -0.6825590133666992, -1.4284905195236206, -1.4202299118041992, 0.5240768790245056, 0.7674723267555237, 0.31554484367370605, 1.2617084980010986, 1.2945836782455444, -0.9738083481788635, 0.4789370000362396, 1.8295458555221558, -0.9074114561080933, 1.1866552829742432, 0.18446797132492065, -1.7347145080566406, 2.259341239929199, -0.16981685161590576, -0.8394676446914673, -0.6194067597389221, -0.45146313309669495, -0.31133073568344116, -3.2344937324523926, 1.2193005084991455, 1.4563173055648804, 1.003592848777771, -1.3121761083602905, 1.7739477157592773, 0.2752249240875244, 0.5028107166290283, -3.3581132888793945, -1.4978950023651123, 0.2214098572731018, 1.5697025060653687, -0.43077224493026733, -0.9593113660812378, 1.418670415878296, 1.0524859428405762, 0.7242922186851501, 1.4325286149978638, -0.6683181524276733, 0.6205645203590393, 4.024154186248779, 3.487555742263794, -1.3898258209228516, -0.48029625415802, -1.5286186933517456, 0.8159308433532715, -0.7912617921829224, 1.1356611251831055, -1.4141706228256226, 1.820730447769165, 1.4169297218322754, -0.1675577461719513, 0.7301154136657715, -2.597128391265869, -0.2715153694152832, 1.3679330348968506, -1.5463236570358276, 0.6546155214309692, 0.18495804071426392, 1.4141769409179688, -0.15179669857025146, 0.1848907768726349, -1.0689706802368164, -0.4803144931793213, -2.0795300006866455, -0.1885572373867035, -2.3007259368896484, 2.7740931510925293, -1.108383297920227, 0.6321626901626587, 0.2251112461090088, 0.6211351752281189, 0.14918208122253418, -0.6540020108222961, 1.1313937902450562, 0.28645187616348267, 0.6125833988189697, -1.6095092296600342, -1.4174083471298218, 0.4440135955810547, -0.7510098218917847, 2.29720139503479, 1.2977800369262695, -0.4726738929748535, -0.42987266182899475, -0.04974751174449921, 1.4729646444320679, 1.1410528421401978, -1.4525868892669678, 0.6835412979125977, 0.43819379806518555, -0.37804001569747925, -0.1818634420633316, 0.13597720861434937, -1.684067964553833, -0.6299898028373718, -0.22650259733200073, 1.3069407939910889, -0.9961742758750916, 0.2604806125164032, -0.09194040298461914, -0.00981903076171875, 0.7897591590881348, 0.8806199431419373, -0.6572142839431763, 0.6603758931159973, 0.12468817830085754, -1.6880906820297241, -0.3742328882217407, -1.2515959739685059, -0.7646282911300659, -0.41139593720436096, -2.580944538116455, -0.8676156997680664, -1.0187246799468994, 0.30844080448150635, 0.704535722732544, -0.8230561017990112, 1.6170321702957153, -0.35272839665412903, -1.6586792469024658, -0.7967346906661987, -0.5626418590545654, 1.7329699993133545, -1.6563408374786377, 1.4874857664108276, 1.2004506587982178, 1.5158929824829102, 0.6409167647361755, 0.10294938087463379, -0.0015920400619506836, -0.36655890941619873, 1.2521378993988037, -1.2971642017364502, -0.32864469289779663, 1.9838963747024536, 0.20366716384887695, -1.3668204545974731, 0.05894678831100464, 1.2578089237213135, 0.27991318702697754, -0.8235651254653931, -0.7416296005249023, -2.132983922958374, -0.28180888295173645, -1.1658380031585693, 0.5831243395805359, 0.4030188322067261, -0.3427356779575348, 1.7201541662216187, 1.4250954389572144, -1.0162136554718018, 1.3346071243286133, 0.4270784258842468, -0.9486767649650574, -0.8325811624526978, 0.3792392313480377, -0.14506316184997559, -2.1034059524536133, 0.43797653913497925, -0.3552595376968384, 0.8180951476097107, 0.0521104633808136, -0.45579755306243896, 1.0695714950561523, -1.6872040033340454, 0.423129141330719, 0.6989980340003967, -0.9388735890388489, 0.12171514332294464, 0.18209242820739746, -1.9216241836547852, 0.9759050607681274, 0.2929766774177551, 0.2502390146255493, -0.5244115591049194, 0.7560449838638306, 0.06506197154521942, 1.073350429534912, -0.3435988426208496, 0.688246488571167, 3.3102195262908936, -1.066534161567688, 1.8791172504425049, -0.3186098337173462, -0.05504542589187622, -0.3127191364765167, -0.18775659799575806, 1.092950463294983, -1.0305705070495605, -1.6089566946029663, 0.5508319139480591, 0.21495479345321655, 0.37040001153945923, -0.956339955329895, -0.585929274559021, 0.4841751456260681, -1.3748213052749634, 0.28140372037887573, -0.9389522075653076, -1.527466893196106, 1.0110561847686768, -0.18140995502471924, -0.6356016397476196, -1.3155134916305542, 1.1791391372680664, -0.9652324318885803, 0.5895864963531494, 4.738149642944336, 0.1948845386505127, 0.24454477429389954, 0.2440599501132965, -1.3766590356826782, 1.4208157062530518, -0.7841929793357849, -0.917893648147583, -1.0366356372833252, -2.320155382156372, -2.7668375968933105, 0.8795031905174255, -1.3970723152160645, -1.8480515480041504, 1.1218950748443604, 1.0777803659439087, -1.4651360511779785, 0.046739399433135986, -0.7429643273353577, -1.4530225992202759, -2.096708297729492, 1.814773440361023, 0.22398924827575684, 0.4849475622177124, 0.4649012088775635, -0.7724992036819458, -1.6824089288711548, 1.4007773399353027, 0.761061429977417, -0.9532654881477356, -0.07001352310180664, 1.704427719116211, 0.2184504270553589, 1.4482359886169434, -0.29754042625427246, -0.5712137222290039, -0.2002086639404297, -0.3428683876991272, 1.1414306163787842, -0.1985243558883667, -0.6658653020858765, 1.1799498796463013, -2.7212631702423096, 0.08721032738685608, -0.11017298698425293, -0.7503460645675659, -1.4158504009246826, -2.254333257675171, -0.5972559452056885, -1.4280149936676025, 0.35543638467788696, -1.7476564645767212, 0.5991665124893188, -2.17826509475708, -0.5043988227844238, -0.8123670816421509, -2.208423137664795, -0.845856785774231, -0.09865301847457886, 1.8340353965759277, -0.3910139799118042, 1.6220154762268066, 1.5537772178649902, 1.7228891849517822, -0.8790112733840942, 0.21502619981765747, -0.257113516330719, -3.500511884689331, -1.547023892402649, -0.1673850417137146, -0.12666727602481842, 0.9562768340110779, 0.3724452257156372, -0.5859804153442383, -0.5419012308120728, 0.17944267392158508, 0.0669965147972107, 0.8899154663085938, 1.4484405517578125, -1.6882272958755493, -0.5435575842857361, -1.301356315612793, -0.08268995583057404, -0.1511911153793335, -1.7061138153076172, -0.028987526893615723, -1.814957857131958, -1.512960433959961, -0.5929423570632935, -1.3564821481704712, 0.8418034315109253, -0.4091091752052307, 0.20785337686538696, -1.453651785850525, 0.9500595927238464, 0.652702808380127, 2.5805211067199707, 1.126422643661499, -0.44250187277793884, 0.3105769157409668, -1.7412012815475464, 0.7061383724212646, -0.48880892992019653, 2.262195348739624, 1.0716310739517212, -0.13659179210662842, 1.6134235858917236, 0.7965070605278015, -1.7917258739471436, -1.4553489685058594, -0.7577797174453735, 0.08972309529781342, -1.3465244770050049, 0.852545440196991, -0.7433288097381592, 1.6255549192428589, 1.903118371963501, 0.6085525751113892, -0.35929426550865173, -0.3360661268234253, 0.7835900187492371, 0.6064437031745911, -3.1008124351501465, -2.782649517059326, -0.5790629386901855, -0.7356334924697876, 0.9482767581939697, 1.988607406616211, 0.33519744873046875, 1.26924729347229, 0.007314443588256836, -1.8051021099090576, -1.830641508102417, -0.380447119474411, -1.5727565288543701, 1.4672229290008545, 0.6931593418121338, -1.3319371938705444, -0.878402590751648, 0.11529779434204102, 1.071094274520874, -1.2369581460952759, -0.17622944712638855, 0.7708150148391724, -0.8468796014785767, 1.033945083618164, 0.30864208936691284, 1.7262202501296997, 0.17852425575256348, -0.2749931216239929, 0.37582266330718994, -1.3889570236206055, -1.5035732984542847, -0.48225119709968567, -1.7973023653030396, 0.5636497735977173, 0.08161020278930664, 0.2741641700267792, 0.609807014465332, -0.0409703254699707, 0.8723623752593994, -0.10605239868164062, -1.4702401161193848, 0.1815166473388672, -0.2147882878780365, -0.8027473092079163, -0.2957000732421875, -0.3686348795890808, -0.3023740351200104, -1.0125281810760498, 0.03711293637752533, -1.0145509243011475, -1.9000754356384277, -0.6054052114486694, -0.028297066688537598, 0.4951990842819214, -0.6408866047859192, 1.2617835998535156, -0.3291218876838684, -1.3560254573822021, -0.44039514660835266, 0.8437405824661255, -0.41861915588378906, -1.539621114730835, -0.24110236763954163, -0.10201406478881836, -0.6683349609375, -1.0065191984176636, -0.6410451531410217, -0.37642422318458557, -1.515587568283081, -0.9597007632255554, 0.5421723127365112, -0.9282538890838623, 1.012946605682373, -0.6146842837333679, 0.2883361577987671, -0.9614418745040894, -0.42781487107276917, 0.6396515965461731, 0.13322004675865173, 1.9726063013076782, 0.7189048528671265, -0.6733453273773193, -1.6017717123031616, 1.4491755962371826, -0.8803164958953857, -0.9842875003814697, 0.3025432825088501, -1.8611077070236206, 1.8049383163452148, -0.9579874873161316, -0.5399748086929321, 2.452831268310547, 1.2700690031051636, -0.3214544653892517, 0.38307225704193115, -0.36845025420188904, 0.7405922412872314, -1.5214835405349731, 1.1460175514221191, -0.6621819734573364, -1.6408616304397583, 1.883208155632019, -0.6784448027610779, -0.39814966917037964, 1.0728249549865723, -0.20008328557014465, 1.3103103637695312, 1.4506253004074097, 1.303916096687317, 0.368068665266037, -0.9070807695388794, -1.3898118734359741, -0.7544281482696533, -1.5332753658294678, -0.2721933126449585, -1.5346007347106934, -0.4886072278022766, 1.1901968717575073, 1.9413186311721802, 0.7895686626434326, -0.8595226407051086, 0.5351662039756775, 1.4689793586730957, 1.0066633224487305, -0.9684062004089355, 0.405398964881897, 1.6752499341964722, -0.7017222046852112, -0.7370100021362305, -1.6215524673461914, -0.9170936942100525, -0.6803535223007202, -0.30863600969314575, -2.0149431228637695, -1.13395094871521, 1.5696032047271729, -0.32963690161705017, 1.257938027381897, -1.353342056274414, 0.43375277519226074, -0.6188321113586426, 1.9701428413391113, 1.452397346496582, -1.8906431198120117, -0.11372843384742737, 0.0017327070236206055, -0.6363505125045776, -1.3209455013275146, -0.1607559621334076, -0.9275362491607666, 2.425847291946411, 0.5618840456008911, 0.5533483624458313, -0.5073819160461426, 0.42998573184013367, 1.0256903171539307, -0.6149945259094238, 0.33749961853027344, 1.4651645421981812, 0.3906381130218506, 2.9073057174682617, -0.7306020259857178, -1.8402737379074097, -0.17401909828186035, -0.16355040669441223, 0.32861119508743286, 0.7995719909667969, 1.447297215461731, -0.44172757863998413, 1.0297871828079224, -1.437773585319519, -0.0054454803466796875, -0.5299213528633118, 0.9096476435661316, -1.3285218477249146, 0.737895131111145, 0.3355594277381897, -1.025036096572876, 0.35631704330444336, 0.2072455883026123, 0.42722809314727783, 0.5273401737213135, -1.1355606317520142, 0.1698840856552124, -1.5124775171279907, -0.5915344953536987, 0.30930209159851074, -1.0357567071914673, 1.704677939414978, 0.15300646424293518, 0.4102509617805481, -0.8872344493865967, -0.28818461298942566, -0.31582367420196533, -0.20554912090301514, -1.4598716497421265, -0.28587788343429565, -1.5988502502441406, 0.5513115525245667, 0.2429875135421753, -1.2863833904266357, -0.7483082413673401, 1.184539556503296, -0.22086405754089355, 1.2738983631134033, 0.277507483959198, 1.1686277389526367, -1.627180814743042, -1.0563580989837646, -0.5146204233169556, 1.3144984245300293, -1.4289335012435913, -1.431317925453186, 0.06536003947257996, -0.38635820150375366, -0.48849472403526306, 0.8967925310134888, 1.3940154314041138, 0.07730251550674438, 0.8435031175613403, -0.0984230637550354, 0.6973612308502197, -1.392627477645874, -0.29078757762908936, 0.9024122953414917, 0.024660766124725342, 0.892031192779541, -1.4486991167068481, -0.6088029146194458, 1.0406928062438965, -0.17363619804382324, -1.3026591539382935, -0.16156291961669922, -1.0207276344299316, -0.5321860313415527, -0.5481683015823364, -1.4208487272262573};

int8_t* filter_tensor_data=filter_raw;
float* bias_tensor_data=bias_raw;

bool has_conv_bias=true;
int stride_width=1;
int stride_height=1;
TfLiteFusedActivation activation=kTfLiteActNone;
int dilation_width_factor=1;
int dilation_height_factor=1;
const int filter_dims_size=4;
const int filter_dims_raw[4]={1,5,5,1152};
const int bias_dims_size=1;
const int32_t bias_dims_raw[1]={1152};
TfLitePadding paddings=kTfLitePaddingSame;
TfLiteType filter_type=kTfLiteInt8;
TfLiteType bias_type=kTfLiteFloat32;
const float scale_filter=0.0;
const int32_t zero_point_filter=0;
const float scale_bias=0.0;
const int32_t zero_point_bias=0;

struct OpData {
  TfLitePaddingValues padding;
  // The scaling factor from input to output (aka the 'real multiplier') can
  // be represented as a fixed point multiplier plus a left shift.
  int32_t output_multiplier;
  int output_shift;
  // The range of the fused activation layer. For example for kNone and
  // uint8_t these would be 0 and 255.
  int32_t output_activation_min;
  int32_t output_activation_max;

  // Per channel output multiplier and shift.
  std::vector<int32_t> per_channel_output_multiplier;
  std::vector<int> per_channel_output_shift;

  // Hybrid per channel temporary tensors.
  int input_quantized_id = kTensorNotAllocated;
  int scaling_factors_id = kTensorNotAllocated;
  int input_offset_id = kTensorNotAllocated;
  int32_t input_quantized_index;
  int32_t scaling_factors_index;
  int32_t input_offset_index;
};

void ExtractDepthConvParams(TfLitePadding padding, int stride_width, int stride_height,
                               int dilation_width_factor, int dilation_height_factor,
                               TfLiteFusedActivation activation,
                               TfLiteDepthwiseConvParams* data_params) {
  // TfLiteDepthwiseConvParams data_params;
  data_params->padding = padding;
  data_params->stride_width = stride_width;
  data_params->stride_height = stride_height;
  data_params->dilation_width_factor = dilation_width_factor;
  data_params->dilation_height_factor = dilation_height_factor;
  data_params->activation = activation;
  // return data_params;
}

void GetDepthConvTensor(TfLiteType type, const char* name, TfLiteIntArray* tensor_dims_data, 
                       TfLiteQuantizationParams quant_params, char* tensor_data,
                       TfLiteAffineQuantization* quant_struct, size_t bytes_size,
                       TfLiteTensor* tensor) {
  tensor->type = type;
  tensor->name = name;
  tensor->dims = tensor_dims_data;
  tensor->params = quant_params;
  // tensor->data.raw = reinterpret_cast<char*>(tensor_data);
  tensor->data.raw = tensor_data;
  tensor->bytes = bytes_size;
  tensor->allocation_type = kTfLiteMemNone;
  // data_0.allocation = allocation;
  tensor->is_variable = false;
  if (type != kTfLiteFloat32) {
    tensor->quantization.type = kTfLiteAffineQuantization;
    tensor->quantization.params = quant_struct;
  } else {
    tensor->quantization.type = kTfLiteNoQuantization;
  }
  tensor->sparsity = nullptr;
}
void* Init(TfLiteContext* context, const char* buffer, size_t length) {
  // This is a builtin op, so we don't use the contents in 'buffer', if any.
  // Instead, we allocate a new object to carry information from Prepare() to
  // Eval().
  return new OpData;
}

void Free(TfLiteContext* context, void* buffer) {
  delete reinterpret_cast<OpData*>(buffer);
}

TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {
  // auto* params =
  //     reinterpret_cast<TfLiteDepthwiseConvParams*>(node->builtin_data);
  TfLiteDepthwiseConvParams data_params;
  ExtractDepthConvParams(paddings, stride_width, stride_height, dilation_width_factor, dilation_height_factor, activation, &data_params);
  TfLiteDepthwiseConvParams* params = &data_params;

  OpData* data = reinterpret_cast<OpData*>(node->user_data);

  bool has_bias = false;

  // TF_LITE_ENSURE(context, has_bias || NumInputs(node) == 2);
  const TfLiteTensor* input;
  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));
  TfLiteTensor filter_tensor;
  TfLiteIntArray* filter_dims_data = TfLiteIntArrayCreate(filter_dims_size);
  int size_filter = 1;
  for (int i = 0; i < filter_dims_size; i++) {
    // std::cout << "dims_raw: " << dims_raw[i] << std::endl;
    filter_dims_data->data[i] = filter_dims_raw[i];
    size_filter *= filter_dims_raw[i];
  }
  size_t bytes_size_filter = sizeof(float) * size_filter;
  TfLiteQuantizationParams filter_params;
  filter_params.scale=scale_filter;
  filter_params.zero_point=zero_point_filter;
  TfLiteFloatArray* scale_array_filter = TfLiteFloatArrayCreate(1);
  scale_array_filter->data[0] = scale_filter;
  TfLiteIntArray* zero_point_array_filter = TfLiteIntArrayCreate(1);
  zero_point_array_filter->data[0] = zero_point_filter;

  TfLiteAffineQuantization quant_struct_filter;
  quant_struct_filter.scale = scale_array_filter;
  quant_struct_filter.zero_point = zero_point_array_filter;
  quant_struct_filter.quantized_dimension = 0;
  // float* filter_data;
  // filter_tensor_data = filter_raw;
  GetDepthConvTensor(filter_type, "filter", filter_dims_data, filter_params,
                       reinterpret_cast<char*>(filter_tensor_data),
                       &quant_struct_filter, bytes_size_filter, &filter_tensor);
  const TfLiteTensor* filter = &filter_tensor;
  // TF_LITE_ENSURE_OK(context,
  //                   GetInputSafe(context, node, kFilterTensor, &filter));
  const TfLiteTensor* bias = nullptr;

  TF_LITE_ENSURE_EQ(context, NumOutputs(node), 1);
  TfLiteTensor* output;
  TF_LITE_ENSURE_OK(context,
                    GetOutputSafe(context, node, kOutputTensor, &output));

  TF_LITE_ENSURE_EQ(context, NumDimensions(input), 4);
  TF_LITE_ENSURE_EQ(context, NumDimensions(filter), 4);
  TF_LITE_ENSURE(context, params->dilation_height_factor > 0);
  TF_LITE_ENSURE(context, params->dilation_width_factor > 0);

  const TfLiteType data_type = input->type;

  const TfLiteType filter_type = filter->type;
  const bool is_hybrid =
      data_type == kTfLiteFloat32 && filter_type == kTfLiteInt8;
  TF_LITE_ENSURE(context,
                 data_type == kTfLiteFloat32 || data_type == kTfLiteUInt8 ||
                     data_type == kTfLiteInt8 || data_type == kTfLiteInt16);
  TF_LITE_ENSURE_TYPES_EQ(context, output->type, data_type);
  if (!is_hybrid) {
    TF_LITE_ENSURE(context,
                   filter->type == data_type || data_type == kTfLiteInt16);
  }

  if (data_type == kTfLiteInt16) {
    TF_LITE_ENSURE_EQ(context, input->params.zero_point, 0);
    TF_LITE_ENSURE_EQ(context, output->params.zero_point, 0);
  }

  // Filter in DepthwiseConv is expected to be [1, H, W, O].
  TF_LITE_ENSURE_EQ(context, SizeOfDimension(filter, 0), 1);

  if (has_bias) {
    TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kBiasTensor, &bias));
    if (data_type == kTfLiteUInt8 || data_type == kTfLiteInt8) {
      TF_LITE_ENSURE_TYPES_EQ(context, bias->type, kTfLiteInt32);
      TF_LITE_ENSURE_EQ(context, bias->params.zero_point, 0);
    } else if (data_type == kTfLiteInt16) {
      TF_LITE_ENSURE_TYPES_EQ(context, bias->type, kTfLiteInt64);
      TF_LITE_ENSURE_EQ(context, bias->params.zero_point, 0);
    } else {
      TF_LITE_ENSURE_TYPES_EQ(context, bias->type, data_type);
    }
    TF_LITE_ENSURE_EQ(context, NumDimensions(bias), 1);
    TF_LITE_ENSURE_EQ(context, SizeOfDimension(filter, 3),
                      SizeOfDimension(bias, 0));
  }

  int channels_out = SizeOfDimension(filter, 3);
  int width = SizeOfDimension(input, 2);
  int height = SizeOfDimension(input, 1);
  int filter_width = SizeOfDimension(filter, 2);
  int filter_height = SizeOfDimension(filter, 1);
  int batches = SizeOfDimension(input, 0);

  // Matching GetWindowedOutputSize in TensorFlow.
  auto padding = params->padding;
  int out_width, out_height;

  data->padding = ComputePaddingHeightWidth(
      params->stride_height, params->stride_width,
      params->dilation_height_factor, params->dilation_width_factor, height,
      width, filter_height, filter_width, padding, &out_height, &out_width);

  // Note that quantized inference requires that all tensors have their
  // parameters set. This is usually done during quantized training or
  // calibration.
  if (data_type != kTfLiteFloat32) {
    TF_LITE_ENSURE_EQ(context, filter->quantization.type,
                      kTfLiteAffineQuantization);
    TF_LITE_ENSURE(context, filter->quantization.type != kTfLiteNoQuantization);
    const auto* affine_quantization =
        reinterpret_cast<TfLiteAffineQuantization*>(
            filter->quantization.params);
    TF_LITE_ENSURE(context, affine_quantization);
    TF_LITE_ENSURE(context, affine_quantization->scale);
    TF_LITE_ENSURE(context, (affine_quantization->scale->size == 1 ||
                             affine_quantization->scale->size == channels_out));

    data->per_channel_output_multiplier.resize(channels_out);
    data->per_channel_output_shift.resize(channels_out);
    TF_LITE_ENSURE_STATUS(tflite::PopulateConvolutionQuantizationParams(
        context, input, filter, bias, output, params->activation,
        &data->output_multiplier, &data->output_shift,
        &data->output_activation_min, &data->output_activation_max,
        data->per_channel_output_multiplier.data(),
        data->per_channel_output_shift.data(), channels_out));
  }

  if (is_hybrid) {
    TF_LITE_ENSURE(context, filter->quantization.type != kTfLiteNoQuantization);
    const auto* affine_quantization =
        reinterpret_cast<TfLiteAffineQuantization*>(
            filter->quantization.params);
    TF_LITE_ENSURE(context, affine_quantization);
    TF_LITE_ENSURE(context, affine_quantization->scale);
    TF_LITE_ENSURE_EQ(
        context, affine_quantization->scale->size,
        filter->dims->data[affine_quantization->quantized_dimension]);

    int temporaries_count = 0;
    data->input_quantized_index = temporaries_count;
    if (data->input_quantized_id == kTensorNotAllocated) {
      TF_LITE_ENSURE_OK(
          context, context->AddTensors(context, 1, &data->input_quantized_id));
    }
    ++temporaries_count;
    data->scaling_factors_index = temporaries_count;
    if (data->scaling_factors_id == kTensorNotAllocated) {
      TF_LITE_ENSURE_OK(
          context, context->AddTensors(context, 1, &data->scaling_factors_id));
    }
    ++temporaries_count;
    data->input_offset_index = temporaries_count;
    if (data->input_offset_id == kTensorNotAllocated) {
      TF_LITE_ENSURE_OK(
          context, context->AddTensors(context, 1, &data->input_offset_id));
    }
    ++temporaries_count;

    TfLiteIntArrayFree(node->temporaries);
    node->temporaries = TfLiteIntArrayCreate(temporaries_count);

    node->temporaries->data[data->input_quantized_index] =
        data->input_quantized_id;
    TfLiteTensor* input_quantized;
    TF_LITE_ENSURE_OK(
        context, GetTemporarySafe(context, node, data->input_quantized_index,
                                  &input_quantized));
    input_quantized->type = kTfLiteInt8;
    input_quantized->allocation_type = kTfLiteArenaRw;
    if (!TfLiteIntArrayEqual(input_quantized->dims, input->dims)) {
      TfLiteIntArray* input_quantized_size = TfLiteIntArrayCopy(input->dims);
      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, input_quantized,
                                                       input_quantized_size));
    }
    node->temporaries->data[data->scaling_factors_index] =
        data->scaling_factors_id;
    TfLiteTensor* scaling_factors;
    TF_LITE_ENSURE_OK(
        context, GetTemporarySafe(context, node, data->scaling_factors_index,
                                  &scaling_factors));
    scaling_factors->type = kTfLiteFloat32;
    scaling_factors->allocation_type = kTfLiteArenaRw;
    const int batch_size = SizeOfDimension(input, 0);
    int scaling_dims[1] = {batch_size};
    if (!TfLiteIntArrayEqualsArray(scaling_factors->dims, 1, scaling_dims)) {
      TfLiteIntArray* scaling_factors_size = TfLiteIntArrayCreate(1);
      scaling_factors_size->data[0] = batch_size;
      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, scaling_factors,
                                                       scaling_factors_size));
    }
    node->temporaries->data[data->input_offset_index] = data->input_offset_id;
    TfLiteTensor* input_offsets;
    TF_LITE_ENSURE_OK(context,
                      GetTemporarySafe(context, node, data->input_offset_index,
                                       &input_offsets));
    input_offsets->type = kTfLiteInt32;
    input_offsets->allocation_type = kTfLiteArenaRw;
    if (!TfLiteIntArrayEqualsArray(input_offsets->dims, 1, scaling_dims)) {
      TfLiteIntArray* input_offsets_size = TfLiteIntArrayCreate(1);
      input_offsets_size->data[0] = batch_size;
      TF_LITE_ENSURE_OK(context, context->ResizeTensor(context, input_offsets,
                                                       input_offsets_size));
    }
  }

  TfLiteIntArray* outputSize = TfLiteIntArrayCreate(4);
  outputSize->data[0] = batches;
  outputSize->data[1] = out_height;
  outputSize->data[2] = out_width;
  outputSize->data[3] = channels_out;
  return context->ResizeTensor(context, output, outputSize);
}

TfLiteStatus ComputeDepthMultiplier(TfLiteContext* context,
                                    const TfLiteTensor* input,
                                    const TfLiteTensor* filter,
                                    int16* depth_multiplier) {
  int num_filter_channels = SizeOfDimension(filter, 3);
  int num_input_channels = SizeOfDimension(input, 3);
  TF_LITE_ENSURE(context, num_input_channels != 0);
  TF_LITE_ENSURE_EQ(context, num_filter_channels % num_input_channels, 0);
  *depth_multiplier = num_filter_channels / num_input_channels;
  return kTfLiteOk;
}

template <KernelType kernel_type>
TfLiteStatus EvalFloat(TfLiteContext* context, TfLiteNode* node,
                       TfLiteDepthwiseConvParams* params, OpData* data,
                       const TfLiteTensor* input, const TfLiteTensor* filter,
                       const TfLiteTensor* bias, TfLiteTensor* output) {
  float output_activation_min, output_activation_max;
  CalculateActivationRange(params->activation, &output_activation_min,
                           &output_activation_max);

  DepthwiseParams op_params;
  op_params.padding_type = PaddingType::kSame;
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.stride_width = params->stride_width;
  op_params.stride_height = params->stride_height;
  op_params.dilation_width_factor = params->dilation_width_factor;
  op_params.dilation_height_factor = params->dilation_height_factor;
  op_params.float_activation_min = output_activation_min;
  op_params.float_activation_max = output_activation_max;
  TF_LITE_ENSURE_STATUS(ComputeDepthMultiplier(context, input, filter,
                                               &op_params.depth_multiplier));
  if (kernel_type == kReference) {
    reference_ops::DepthwiseConv(
        op_params, GetTensorShape(input), GetTensorData<float>(input),
        GetTensorShape(filter), GetTensorData<float>(filter),
        GetTensorShape(bias), GetTensorData<float>(bias),
        GetTensorShape(output), GetTensorData<float>(output));
  } else {
    optimized_ops::DepthwiseConv<float, float>(
        op_params, GetTensorShape(input), GetTensorData<float>(input),
        GetTensorShape(filter), GetTensorData<float>(filter),
        GetTensorShape(bias), GetTensorData<float>(bias),
        GetTensorShape(output), GetTensorData<float>(output),
        CpuBackendContext::GetFromContext(context));
  }
  return kTfLiteOk;
}

template <KernelType kernel_type>
TfLiteStatus EvalQuantized(TfLiteContext* context, TfLiteNode* node,
                           TfLiteDepthwiseConvParams* params, OpData* data,
                           const TfLiteTensor* input,
                           const TfLiteTensor* filter, const TfLiteTensor* bias,
                           TfLiteTensor* output) {
  auto input_offset = -input->params.zero_point;
  auto filter_offset = -filter->params.zero_point;
  auto output_offset = output->params.zero_point;

  DepthwiseParams op_params;
  op_params.padding_type = PaddingType::kSame;
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.stride_width = params->stride_width;
  op_params.stride_height = params->stride_height;
  op_params.dilation_width_factor = params->dilation_width_factor;
  op_params.dilation_height_factor = params->dilation_height_factor;
  op_params.input_offset = input_offset;
  op_params.weights_offset = filter_offset;
  op_params.output_offset = output_offset;
  op_params.output_multiplier = data->output_multiplier;
  op_params.output_shift = -data->output_shift;
  op_params.quantized_activation_min = data->output_activation_min;
  op_params.quantized_activation_max = data->output_activation_max;
  TF_LITE_ENSURE_STATUS(ComputeDepthMultiplier(context, input, filter,
                                               &op_params.depth_multiplier));
  if (kernel_type == kReference) {
    reference_ops::DepthwiseConv(
        op_params, GetTensorShape(input), GetTensorData<uint8_t>(input),
        GetTensorShape(filter), GetTensorData<uint8_t>(filter),
        GetTensorShape(bias), GetTensorData<int32_t>(bias),
        GetTensorShape(output), GetTensorData<uint8_t>(output));
  } else {
    optimized_ops::DepthwiseConv<uint8, int32>(
        op_params, GetTensorShape(input), GetTensorData<uint8_t>(input),
        GetTensorShape(filter), GetTensorData<uint8_t>(filter),
        GetTensorShape(bias), GetTensorData<int32_t>(bias),
        GetTensorShape(output), GetTensorData<uint8_t>(output),
        CpuBackendContext::GetFromContext(context));
  }
  return kTfLiteOk;
}

template <KernelType kernel_type>
TfLiteStatus EvalQuantizedPerChannel(TfLiteContext* context, TfLiteNode* node,
                                     TfLiteDepthwiseConvParams* params,
                                     OpData* data, const TfLiteTensor* input,
                                     const TfLiteTensor* filter,
                                     const TfLiteTensor* bias,
                                     TfLiteTensor* output) {
  DepthwiseParams op_params;
  op_params.padding_type = PaddingType::kSame;
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.stride_width = params->stride_width;
  op_params.stride_height = params->stride_height;
  op_params.dilation_width_factor = params->dilation_width_factor;
  op_params.dilation_height_factor = params->dilation_height_factor;
  op_params.input_offset = -input->params.zero_point;
  op_params.weights_offset = 0;
  op_params.output_offset = output->params.zero_point;
  op_params.quantized_activation_min = data->output_activation_min;
  op_params.quantized_activation_max = data->output_activation_max;
  TF_LITE_ENSURE_STATUS(ComputeDepthMultiplier(context, input, filter,
                                               &op_params.depth_multiplier));

  if (kernel_type == kReference) {
    reference_integer_ops::DepthwiseConvPerChannel(
        op_params, data->per_channel_output_multiplier.data(),
        data->per_channel_output_shift.data(), GetTensorShape(input),
        GetTensorData<int8>(input), GetTensorShape(filter),
        GetTensorData<int8>(filter), GetTensorShape(bias),
        GetTensorData<int32>(bias), GetTensorShape(output),
        GetTensorData<int8>(output));
  } else {
    optimized_integer_ops::DepthwiseConvPerChannel(
        op_params, data->per_channel_output_multiplier.data(),
        data->per_channel_output_shift.data(), GetTensorShape(input),
        GetTensorData<int8>(input), GetTensorShape(filter),
        GetTensorData<int8>(filter), GetTensorShape(bias),
        GetTensorData<int32>(bias), GetTensorShape(output),
        GetTensorData<int8>(output),
        CpuBackendContext::GetFromContext(context));
  }
  return kTfLiteOk;
}

TfLiteStatus EvalQuantizedPerChannel16x8(
    const TfLiteDepthwiseConvParams* params, const OpData* data,
    const TfLiteTensor* input, const TfLiteTensor* filter,
    const TfLiteTensor* bias, TfLiteTensor* output) {
  DepthwiseParams op_params;
  op_params.padding_type = PaddingType::kSame;
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.stride_width = params->stride_width;
  op_params.stride_height = params->stride_height;
  op_params.dilation_width_factor = params->dilation_width_factor;
  op_params.dilation_height_factor = params->dilation_height_factor;
  op_params.depth_multiplier = params->depth_multiplier;
  op_params.weights_offset = 0;
  op_params.quantized_activation_min = data->output_activation_min;
  op_params.quantized_activation_max = data->output_activation_max;

  reference_integer_ops::DepthwiseConvPerChannel(
      op_params, data->per_channel_output_multiplier.data(),
      data->per_channel_output_shift.data(), GetTensorShape(input),
      GetTensorData<int16>(input), GetTensorShape(filter),
      GetTensorData<int8>(filter), GetTensorShape(bias),
      GetTensorData<std::int64_t>(bias), GetTensorShape(output),
      GetTensorData<int16>(output));

  return kTfLiteOk;
}

template <KernelType kernel_type>
TfLiteStatus EvalHybridPerChannel(TfLiteContext* context, TfLiteNode* node,
                                  TfLiteDepthwiseConvParams* params,
                                  OpData* data, const TfLiteTensor* input,
                                  const TfLiteTensor* filter,
                                  const TfLiteTensor* bias,
                                  TfLiteTensor* output) {
  float output_activation_min, output_activation_max;
  CalculateActivationRange(params->activation, &output_activation_min,
                           &output_activation_max);
  const int batch_size = SizeOfDimension(input, 0);
  TF_LITE_ENSURE(context, batch_size != 0);
  const int input_size = NumElements(input) / batch_size;
  TfLiteTensor* input_quantized;
  TF_LITE_ENSURE_OK(context,
                    GetTemporarySafe(context, node, data->input_quantized_index,
                                     &input_quantized));
  int8_t* quantized_input_ptr_batch = input_quantized->data.int8;
  TfLiteTensor* scaling_factors_tensor;
  TF_LITE_ENSURE_OK(context,
                    GetTemporarySafe(context, node, data->scaling_factors_index,
                                     &scaling_factors_tensor));
  float* scaling_factors_ptr = GetTensorData<float>(scaling_factors_tensor);
  TfLiteTensor* input_offset_tensor;
  TF_LITE_ENSURE_OK(context,
                    GetTemporarySafe(context, node, data->input_offset_index,
                                     &input_offset_tensor));
  int32_t* input_offset_ptr = GetTensorData<int32_t>(input_offset_tensor);

  for (int b = 0; b < batch_size; ++b) {
    const int offset = b * input_size;
    tensor_utils::AsymmetricQuantizeFloats(
        GetTensorData<float>(input) + offset, input_size,
        quantized_input_ptr_batch + offset, &scaling_factors_ptr[b],
        &input_offset_ptr[b]);
  }

  DepthwiseParams op_params;
  op_params.padding_type = PaddingType::kSame;
  op_params.padding_values.width = data->padding.width;
  op_params.padding_values.height = data->padding.height;
  op_params.stride_width = params->stride_width;
  op_params.stride_height = params->stride_height;
  op_params.dilation_width_factor = params->dilation_width_factor;
  op_params.dilation_height_factor = params->dilation_height_factor;
  op_params.depth_multiplier = params->depth_multiplier;

  op_params.weights_offset = 0;
  op_params.float_activation_min = output_activation_min;
  op_params.float_activation_max = output_activation_max;
  TF_LITE_ENSURE(context, filter->quantization.type != kTfLiteNoQuantization);
  const auto* affine_quantization =
      reinterpret_cast<TfLiteAffineQuantization*>(filter->quantization.params);
  if (kernel_type == kReference) {
    reference_integer_ops::DepthwiseConvHybridPerChannel(
        op_params, scaling_factors_ptr, GetTensorShape(input),
        quantized_input_ptr_batch, GetTensorShape(filter),
        GetTensorData<int8>(filter), GetTensorShape(bias),
        GetTensorData<float>(bias), GetTensorShape(output),
        GetTensorData<float>(output), affine_quantization->scale->data,
        input_offset_ptr);
  } else {
    optimized_integer_ops::DepthwiseConvHybridPerChannel(
        op_params, scaling_factors_ptr, GetTensorShape(input),
        quantized_input_ptr_batch, GetTensorShape(filter),
        GetTensorData<int8>(filter), GetTensorShape(bias),
        GetTensorData<float>(bias), GetTensorShape(output),
        GetTensorData<float>(output), affine_quantization->scale->data,
        input_offset_ptr, CpuBackendContext::GetFromContext(context));
  }

  return kTfLiteOk;
}

template <KernelType kernel_type, TfLiteType input_type>
TfLiteStatus EvalImpl(TfLiteContext* context, TfLiteNode* node) {
  // auto* params =
  //     reinterpret_cast<TfLiteDepthwiseConvParams*>(node->builtin_data);
  TfLiteDepthwiseConvParams data_params;
  ExtractDepthConvParams(paddings, stride_width, stride_height, dilation_width_factor, dilation_height_factor, activation, &data_params);
  TfLiteDepthwiseConvParams* params = &data_params;

  OpData* data = reinterpret_cast<OpData*>(node->user_data);

  TfLiteTensor* output;
  TF_LITE_ENSURE_OK(context,
                    GetOutputSafe(context, node, kOutputTensor, &output));
  const TfLiteTensor* input;
  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));
  // const TfLiteTensor* filter;
  // TF_LITE_ENSURE_OK(context,
  //                   GetInputSafe(context, node, kFilterTensor, &filter));
  TfLiteTensor filter_tensor;
  TfLiteIntArray* filter_dims_data = TfLiteIntArrayCreate(filter_dims_size);
  int size_filter = 1;
  for (int i = 0; i < filter_dims_size; i++) {
    // std::cout << "dims_raw: " << dims_raw[i] << std::endl;
    filter_dims_data->data[i] = filter_dims_raw[i];
    size_filter *= filter_dims_raw[i];
  }
  size_t bytes_size_filter = sizeof(float) * size_filter;
  TfLiteQuantizationParams filter_params;
  filter_params.scale=scale_filter;
  filter_params.zero_point=zero_point_filter;

  TfLiteFloatArray* scale_array_filter = TfLiteFloatArrayCreate(1);
  scale_array_filter->data[0] = scale_filter;
  TfLiteIntArray* zero_point_array_filter = TfLiteIntArrayCreate(1);
  zero_point_array_filter->data[0] = zero_point_filter;

  TfLiteAffineQuantization quant_struct_filter;
  quant_struct_filter.scale = scale_array_filter;
  quant_struct_filter.zero_point = zero_point_array_filter;
  quant_struct_filter.quantized_dimension = 0;
  // float* filter_data;
  // filter_tensor_data = filter_raw;
  GetDepthConvTensor(filter_type, "filter", filter_dims_data, filter_params,
                       reinterpret_cast<char*>(filter_tensor_data),
                       &quant_struct_filter, bytes_size_filter, &filter_tensor);
  const TfLiteTensor* filter = &filter_tensor;
  // const TfLiteTensor* bias =
  //     (NumInputs(node) == 3) ? GetInput(context, node, kBiasTensor) : nullptr;
  TfLiteTensor bias_tensor;
  const TfLiteTensor* bias;
  if (has_conv_bias) {
    TfLiteIntArray* bias_dims_data = TfLiteIntArrayCreate(bias_dims_size);
    int size_bias = 1;
    for (int i = 0; i < bias_dims_size; i++) {
      // std::cout << "dims_raw: " << dims_raw[i] << std::endl;
      bias_dims_data->data[i] = bias_dims_raw[i];
      size_bias *= bias_dims_raw[i];
    }
    size_t bytes_size_bias = sizeof(float) * size_bias;
    TfLiteQuantizationParams bias_params;
    bias_params.scale=scale_bias;
    bias_params.zero_point=zero_point_bias;

    TfLiteFloatArray* scale_array_bias = TfLiteFloatArrayCreate(1);
    scale_array_bias->data[0] = scale_bias;
    TfLiteIntArray* zero_point_array_bias = TfLiteIntArrayCreate(1);
    zero_point_array_bias->data[0] = zero_point_bias;

    TfLiteAffineQuantization quant_struct_bias;
    quant_struct_bias.scale = scale_array_bias;
    quant_struct_bias.zero_point = zero_point_array_bias;
    quant_struct_bias.quantized_dimension = 0;
    
    // float* bias_data;
    // bias_tensor_data = bias_raw;
    GetDepthConvTensor(bias_type, "bias", bias_dims_data, bias_params,
                        reinterpret_cast<char*>(bias_tensor_data), 
                        &quant_struct_bias, bytes_size_bias, &bias_tensor);
    bias = &bias_tensor;
  } else {
    bias = nullptr;
  }

  TFLITE_DCHECK_EQ(input_type, input->type);

  switch (input_type) {  // Already know in/out types are same.
    case kTfLiteFloat32:
      if (filter->type == kTfLiteFloat32) {
        return EvalFloat<kernel_type>(context, node, params, data, input,
                                      filter, bias, output);
      } else if (filter->type == kTfLiteInt8) {
        return EvalHybridPerChannel<kernel_type>(context, node, params, data,
                                                 input, filter, bias, output);
      } else {
        TF_LITE_KERNEL_LOG(
            context, "Type %s with filter type %s not currently supported.",
            TfLiteTypeGetName(input->type), TfLiteTypeGetName(filter->type));
        return kTfLiteError;
      }
      break;
    case kTfLiteUInt8:
      return EvalQuantized<kernel_type>(context, node, params, data, input,
                                        filter, bias, output);
      break;
    case kTfLiteInt8:
      return EvalQuantizedPerChannel<kernel_type>(context, node, params, data,
                                                  input, filter, bias, output);
      break;
    case kTfLiteInt16:
      return EvalQuantizedPerChannel16x8(params, data, input, filter, bias,
                                         output);
      break;
    default:
      context->ReportError(context, "Type %d not currently supported.",
                           input->type);
      return kTfLiteError;
  }
}

template <KernelType kernel_type>
TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {
  const TfLiteTensor* input;
  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));

  switch (input->type) {  // Already know in/out types are same.
    case kTfLiteFloat32:
      return EvalImpl<kernel_type, kTfLiteFloat32>(context, node);
    case kTfLiteUInt8:
      return EvalImpl<kernel_type, kTfLiteUInt8>(context, node);
    case kTfLiteInt8:
      return EvalImpl<kernel_type, kTfLiteInt8>(context, node);
    case kTfLiteInt16:
      return EvalImpl<kernel_type, kTfLiteInt16>(context, node);
    default:
      context->ReportError(context, "Type %d not currently supported.",
                           input->type);
      return kTfLiteError;
  }
}

}  // namespace cxtjry

TfLiteRegistration* Register_cxtjry_REF() {
  static TfLiteRegistration r = {
      cxtjry::Init, cxtjry::Free, cxtjry::Prepare,
      cxtjry::Eval<cxtjry::kReference>};
  return &r;
}

TfLiteRegistration* Register_cxtjry_GENERIC_OPT() {
  static TfLiteRegistration r = {
      cxtjry::Init, cxtjry::Free, cxtjry::Prepare,
      cxtjry::Eval<cxtjry::kGenericOptimized>};
  return &r;
}

TfLiteRegistration* Register_cxtjry_NEON_OPT() {
  static TfLiteRegistration r = {
      cxtjry::Init, cxtjry::Free, cxtjry::Prepare,
      cxtjry::Eval<cxtjry::kNeonOptimized>};
  return &r;
}

TfLiteRegistration* Register_cxtjry_NEON_OPT_UINT8() {
  static TfLiteRegistration r = {
      cxtjry::Init, cxtjry::Free, cxtjry::Prepare,
      cxtjry::EvalImpl<cxtjry::kNeonOptimized, kTfLiteUInt8>};
  return &r;
}

TfLiteRegistration* Register_cxtjry() {
#ifdef USE_NEON
  return Register_cxtjry_NEON_OPT();
#else
  return Register_cxtjry_GENERIC_OPT();
#endif
}

// Warning: Clients using this variant are responsible for ensuring that their
// models only need the UINT8 type. TFLite's op registration mechanism doesn't
// yet allow for more nuanced registration mechanisms.
TfLiteRegistration* Register_cxtjry_UINT8() {
#ifdef USE_NEON
  return Register_cxtjry_NEON_OPT_UINT8();
#else
  return Register_cxtjry();
#endif
}

}  // namespace builtin
}  // namespace ops
}  // namespace tflite
